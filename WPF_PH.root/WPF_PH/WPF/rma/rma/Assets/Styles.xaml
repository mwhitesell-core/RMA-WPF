<ResourceDictionary xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:my = "clr-namespace:rma.Controls" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:myControl="clr-namespace:Core.Windows.UI.Core.Windows.UI;assembly=Core.Windows.UI" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <Style x:Key = "ScreenBackGroundStyle" TargetType = "{x:Type Grid}">
        <Setter Property = "Background" Value = "AliceBlue"/>
    </Style>

    <Style x:Key = "CloseButtonStyle" TargetType = "{x:Type Button}">

        <Setter Property = "Background" Value = "#FF1F3B53"/>
        <Setter Property = "Foreground" Value = "#FF000000"/>
        <Setter Property = "Padding" Value = "3"/>
        <Setter Property = "BorderThickness" Value = "1"/>
        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA3AEB9" Offset = "0"/>
                    <GradientStop Color = "#FF8399A9" Offset = "0.375"/>
                    <GradientStop Color = "#FF718597" Offset = "0.375"/>
                    <GradientStop Color = "#FF617584" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type Button}">
                    <Grid x:Name = "grid" Background = "#02FFFFFF" HorizontalAlignment = "Center" Height = "20" VerticalAlignment = "Center" Width = "22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name = "CommonStates">
                                <VisualState x:Name = "Normal"/>
                                <VisualState x:Name = "MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "White" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName = "border"/>
                                        <DoubleAnimation Duration = "0:0:0" Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "Opacity" To = "0.7"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "grid">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Pressed"/>
                                <VisualState x:Name = "Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name = "border" BorderThickness = "1" CornerRadius = "10" BorderBrush = "{x:Null}" Width = "20" Margin = "0,0,1,0" Height = "20" Background = "Transparent"/>
                        <Border x:Name = "imageBorder" BorderThickness = "1" CornerRadius = "20" Width = "20" Height = "20" Margin = "0.5,0,2,0">
                            <Border.Background>
                                <ImageBrush Stretch = "Fill" ImageSource = "/rma;component/Images/cancel_48.png"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key = "LayoutRootGridStyle" TargetType = "{x:Type Grid}">
        <Setter Property = "Background" Value = "#FFFFFFFF"/>
    </Style>



    <!--<Style x:Key="ScreenBackGroundStyle"
           TargetType="{x:Type Grid}">
        <Setter Property="Background" >
            <Setter.Value>                
                    <LinearGradientBrush EndPoint="0.5,1"
                                         MappingMode="RelativeToBoundingBox"
                                         StartPoint="0.5,0">
                        <GradientStop Color="#FF2A8FED"
                                      Offset="1" />
                        <GradientStop Color="White" />
                    </LinearGradientBrush>               
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- Navigation Outer StackPanel Style -->
    <Style x:Key = "NavigationOuterGridStyle" TargetType = "{x:Type Grid}"/>

    <!-- Navigation Grid Style -->
    <Style x:Key = "NavigationGridStyle" TargetType = "{x:Type Grid}">
        <Setter Property = "Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FF021B4E" Offset = "0"/>
                    <GradientStop Color = "#FF657EB1" Offset = "1"/>
                    <GradientStop Color = "#FF003876" Offset = "0.5"/>
                    <GradientStop Color = "#FF334D7F" Offset = "0.75"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "Height" Value = "40"/>
        <Setter Property = "Margin" Value = "0"/>
        <Setter Property = "VerticalAlignment" Value = "Top"/>
    </Style>

    <!-- Branding Border Style -->
    <Style x:Key = "BrandingBorderStyle" TargetType = "{x:Type Border}">
        <Setter Property = "Height" Value = "42"/>
        <Setter Property = "Margin" Value = "10,0,25,0"/>
        <Setter Property = "VerticalAlignment" Value = "Top"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
    </Style>

    <!-- Branding StackPanel Style -->
    <Style x:Key = "BrandingStackPanelStyle" TargetType = "{x:Type StackPanel}">
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "Orientation" Value = "Horizontal"/>
    </Style>

    <!-- Separator Line Style -->
    <Style x:Key = "SeparatorStyle" TargetType = "{x:Type Rectangle}">
        <Setter Property = "Width" Value = "1"/>
        <Setter Property = "StrokeThickness" Value = ".75"/>
        <Setter Property = "Margin" Value = "5,8,5,8"/>
        <Setter Property = "Stroke">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FF4667AA"/>
                    <GradientStop Color = "#FFFFFFFF" Offset = "0.30"/>
                    <GradientStop Color = "#FFFFFFFF" Offset = "0.60"/>
                    <GradientStop Color = "#FF0C2D6F" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Separator Line Style -->
    <Style x:Key = "PageSeparatorStyle" TargetType = "{x:Type Rectangle}">
        <Setter Property = "Width" Value = "1"/>
        <Setter Property = "StrokeThickness" Value = ".75"/>
        <Setter Property = "Margin" Value = "14,8,14,8"/>
        <Setter Property = "Stroke">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFFFFFFF"/>
                    <GradientStop Color = "#FFEBEBEB" Offset = "0.30"/>
                    <GradientStop Color = "#FFEBEBEB" Offset = "0.60"/>
                    <GradientStop Color = "#FFFFFFFF" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Separator Line Style -->
    <Style x:Key = "HorizontalPageSeparatorStyle" TargetType = "{x:Type Rectangle}">
        <Setter Property = "Width" Value = "500"/>
        <Setter Property = "Height" Value = "5"/>
        <Setter Property = "StrokeThickness" Value = ".75"/>
        <Setter Property = "Margin" Value = "5,8,5,8"/>
        <Setter Property = "Stroke">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "1,0.5" StartPoint = "0,0.5">
                    <GradientStop Color = "#FFFFFFFF"/>
                    <GradientStop Color = "#FFEBEBEB" Offset = "0.30"/>
                    <GradientStop Color = "#FFEBEBEB" Offset = "0.60"/>
                    <GradientStop Color = "#FFFFFFFF" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Color Brushes -->
    <SolidColorBrush x:Key = "NavigationBackgroundColorBrush" Color = "#FF484848"/>
    <SolidColorBrush x:Key = "NavigationForegroundColorBrush" Color = "#FFFFFFFF"/>
    <SolidColorBrush x:Key = "HighLightColorBrush" Color = "#FF0097FC"/>
    <SolidColorBrush x:Key = "HoverHyperlinkForegroundColorBrush" Color = "#FFEBF7FF"/>
    <SolidColorBrush x:Key = "HoverHyperLinkBackgroundColorBrush" Color = "#FF747474"/>
    <SolidColorBrush x:Key = "BodyTextColorBrush" Color = "#FF313131"/>
    <SolidColorBrush x:Key = "ContentGridStyle" Color = "#FFEBEBEB"/>

    <!-- Links Border Style -->
    <Style x:Key = "LinksBorderStyle" TargetType = "{x:Type Border}">
        <Setter Property = "Height" Value = "42"/>
        <Setter Property = "Margin" Value = "15,0,15,0"/>
        <Setter Property = "HorizontalAlignment" Value = "Right"/>
    </Style>

    <!-- Links StackPanel Style -->
    <Style x:Key = "LinksStackPanelStyle" TargetType = "{x:Type StackPanel}">
        <Setter Property = "VerticalAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "Orientation" Value = "Horizontal"/>
    </Style>



    <!-- Divider Style -->
    <Style x:Key = "DividerStyle" TargetType = "{x:Type Rectangle}">
        <Setter Property = "Fill" Value = "#1FFFFFFF"/>
        <Setter Property = "Stroke" Value = "Transparent"/>
        <Setter Property = "Width" Value = "1"/>
        <Setter Property = "Margin" Value = "2,4,2,4"/>
    </Style>

    <Style x:Key = "MenuButtonStyle" TargetType = "{x:Type Button}">
        <Setter Property = "MinWidth" Value = "5"/>
        <Setter Property = "MinHeight" Value = "26"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type Button}">
                    <Border x:Name = "border" Background = "Transparent" Width = "Auto" BorderThickness = "1">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                <GradientStop Color = "#00282828" Offset = "0"/>
                                <GradientStop Color = "#005F5F5F" Offset = "1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name = "CommonStates">
                                <VisualState x:Name = "Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "#FFE3E3E3" Storyboard.TargetProperty = "(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName = "textBlock"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Normal"/>
                                <VisualState x:Name = "MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "#FF334D7F" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "grid"/>
                                        <ColorAnimation Duration = "0" To = "#FF003876" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "grid"/>
                                        <ColorAnimation Duration = "0" To = "#FF657EB1" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName = "grid"/>
                                        <ColorAnimation Duration = "0" To = "#FF021B4E" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName = "grid"/>
                                        <!--<ColorAnimation Duration="0"
                                                        To="White"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="textBlock"
                                                        />-->
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "border"/>
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "border"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "border">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Pressed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name = "grid" Height = "36">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                    <GradientStop Color = "#005D99D1" Offset = "0"/>
                                    <GradientStop Color = "#002D69A0" Offset = "0.50"/>
                                    <GradientStop Color = "#00104C83" Offset = "0.50"/>
                                    <GradientStop Color = "#00003E74" Offset = "1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <ContentPresenter>
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name = "textBlock" FontFamily = "Arial" FontSize = "11" Foreground = "#FF99CCFF" Text = "{TemplateBinding Content}" Margin = "6,0,6,0" Height = "14"/>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <ControlTemplate x:Key = "TextBoxControlTemplate" TargetType = "{x:Type TextBox}">
        <Grid x:Name = "RootElement">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name = "CommonStates">
                    <VisualState x:Name = "Normal"/>
                    <VisualState x:Name = "MouseOver">
                        <!--<Storyboard>
                            <ColorAnimation Storyboard.TargetName="MouseOverBorder"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#FF99C1E2"
                                            Duration="0" />
                        </Storyboard>-->
                    </VisualState>
                    <VisualState x:Name = "Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName = "DisabledVisualElement" Storyboard.TargetProperty = "Opacity" To = "1" Duration = "0"/>
                            <ColorAnimation Duration = "0" To = "#A5E2DADA" Storyboard.TargetProperty = "(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName = "DisabledVisualElement"/>
                            <ColorAnimation Duration = "0" To = "#A5DED6D6" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName = "DisabledVisualElement"/>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "ReadOnly">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName = "ReadOnlyVisualElement" Storyboard.TargetProperty = "Opacity" To = "1" Duration = "0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name = "FocusStates">
                    <!--<VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusVisualElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>-->
                    <VisualState x:Name = "Unfocused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName = "FocusVisualElement" Storyboard.TargetProperty = "Opacity" To = "0" Duration = "0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name = "ValidationStates">
                    <VisualState x:Name = "Valid"/>
                    <VisualState x:Name = "InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "ValidationErrorElement" Storyboard.TargetProperty = "Visibility">
                                <DiscreteObjectKeyFrame KeyTime = "0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "ValidationErrorElement" Storyboard.TargetProperty = "Visibility">
                                <DiscreteObjectKeyFrame KeyTime = "0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>

                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name = "Border" BorderThickness = "{TemplateBinding BorderThickness}" CornerRadius = "1" Opacity = "1" Background = "{TemplateBinding Background}" BorderBrush = "{TemplateBinding BorderBrush}">
                <Grid>
                    <Border x:Name = "ReadOnlyVisualElement" Opacity = "0" Background = "#5EC9C9C9"/>
                    <Border x:Name = "MouseOverBorder" BorderThickness = "1">
                        <ScrollViewer x:Name = "ContentElement" Padding = "{TemplateBinding Padding}" BorderThickness = "0" IsTabStop = "False"/>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name = "DisabledVisualElement" Background = "#A5F7F7F7" BorderBrush = "#A5F7F7F7" BorderThickness = "{TemplateBinding BorderThickness}" Opacity = "0" IsHitTestVisible = "False"/>
            <Border x:Name = "FocusVisualElement" BorderBrush = "#FF6DBDD1" BorderThickness = "{TemplateBinding BorderThickness}" Margin = "1" IsHitTestVisible = "False"/>
            <Border x:Name = "ValidationErrorElement" BorderThickness = "1" CornerRadius = "1" BorderBrush = "#FFDB000C" Visibility = "Collapsed">
                <ToolTipService.ToolTip>
                    <ToolTip x:Name = "validationTooltip" Placement = "Right" PlacementTarget = "{Binding RelativeSource={RelativeSource TemplatedParent}}" DataContext = "{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                </ToolTipService.ToolTip>
                <Grid Width = "12" Height = "12" HorizontalAlignment = "Right" Margin = "1,-4,-4,0" VerticalAlignment = "Top">
                    <Path Margin = "1,3,0,0" Data = "M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill = "#FFDC000C"/>
                    <Path Margin = "1,3,0,0" Data = "M 0,0 L2,0 L 8,6 L8,8" Fill = "#ffffff"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key = "AppendButtonStyle" TargetType = "{x:Type Button}">
        <Setter Property = "Background" Value = "#FF1F3B53"/>
        <Setter Property = "Foreground" Value = "#FF000000"/>
        <Setter Property = "Padding" Value = "3"/>
        <Setter Property = "BorderThickness" Value = "1"/>
        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA3AEB9" Offset = "0"/>
                    <GradientStop Color = "#FF8399A9" Offset = "0.375"/>
                    <GradientStop Color = "#FF718597" Offset = "0.375"/>
                    <GradientStop Color = "#FF617584" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type Button}">
                    <Grid x:Name = "grid" Background = "#02FFFFFF" HorizontalAlignment = "Center" Height = "20" VerticalAlignment = "Center" Width = "22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name = "CommonStates">
                                <VisualState x:Name = "Normal"/>
                                <VisualState x:Name = "MouseOver">
                                    <Storyboard>

                                        <ColorAnimation Duration = "0" To = "sc#1, 0.9473065, 0.9473065, 0.9473065" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName = "border"/>
                                        <DoubleAnimation Duration = "0:0:0" Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "Opacity" To = "1"/>
                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00" Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "(Image.Source)">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <BitmapImage UriSource = "/rma;component/Images/Create.png"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "grid">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderThickness)" Storyboard.TargetName = "border">
                                            <EasingThicknessKeyFrame KeyTime = "0" Value = "1"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName = "imageBorder">
                                            <EasingColorKeyFrame KeyTime = "0" Value = "#FF6CAFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderThickness)" Storyboard.TargetName = "imageBorder">
                                            <EasingThicknessKeyFrame KeyTime = "0" Value = "2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Pressed"/>
                                <VisualState x:Name = "Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "Visibility">
                                            <DiscreteObjectKeyFrame KeyTime = "0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "imageBorderDisabled" Storyboard.TargetProperty = "Visibility">
                                            <DiscreteObjectKeyFrame KeyTime = "0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name = "FocusStates">
                                <VisualState x:Name = "Focused">
                                    <Storyboard>

                                        <ColorAnimation Duration = "0" To = "sc#1, 0.9473065, 0.9473065, 0.9473065" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName = "border"/>
                                        <DoubleAnimation Duration = "0:0:0" Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "Opacity" To = "1"/>
                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00" Storyboard.TargetName = "imageBorder" Storyboard.TargetProperty = "(Image.Source)">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <BitmapImage UriSource = "/rma;component/Images/Create.png"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "grid">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderThickness)" Storyboard.TargetName = "border">
                                            <EasingThicknessKeyFrame KeyTime = "0" Value = "1"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName = "imageBorder">
                                            <EasingColorKeyFrame KeyTime = "0" Value = "#FF6CAFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty = "(Border.BorderThickness)" Storyboard.TargetName = "imageBorder">
                                            <EasingThicknessKeyFrame KeyTime = "0" Value = "2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name = "border" BorderThickness = "1" CornerRadius = "10" BorderBrush = "{x:Null}" Width = "20" Margin = "0,0,1,0" Height = "20" Background = "Transparent"/>
                        <Border x:Name = "imageBorder" BorderThickness = "1" CornerRadius = "20" Width = "20" Height = "20" Margin = "0.5,0,2,0" BorderBrush = "#00000000">
                            <Border.Background>
                                <ImageBrush Stretch = "Fill" ImageSource = "/rma;component/Images/Create.png"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name = "imageBorderDisabled" Visibility = "Hidden" BorderThickness = "1" CornerRadius = "20" Width = "20" Height = "20" Margin = "0.5,0,2,0">
                            <Border.Background>
                                <ImageBrush Stretch = "Fill" ImageSource = "/rma;component/Images/Create_Disabled.png"/>
                            </Border.Background>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key = "GridImageButton" TargetType = "{x:Type Button}" >
        <Setter Property = "Width" Value = "20"/>
        <Setter Property = "Height" Value = "20"/>
        <Setter Property = "Cursor" Value = "Hand"/>
    </Style>



    <Style x:Key = "PagerNavigationButton" TargetType = "{x:Type Button}">
        <Setter Property = "Height" Value = "25"/>
        <Setter Property = "Width" Value = "25"/>
    </Style>

    <Style x:Key = "PagerNavigationButtonSmall" TargetType = "{x:Type Button}">
        <Setter Property = "Height" Value = "14"/>
        <Setter Property = "Width" Value = "14"/>
    </Style>




    <!-- NavigationButtonTemplate -->
    <ControlTemplate x:Key = "NavigationButtonTemplate" TargetType = "{x:Type Button}">
        <Grid x:Name = "grid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name = "CommonStates">
                    <VisualState x:Name = "Normal"/>
                    <VisualState x:Name = "MouseOver">
                        <Storyboard>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "BorderFocus" Storyboard.TargetProperty = "Visibility">
                                <DiscreteObjectKeyFrame KeyTime = "0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration = "0" Storyboard.TargetName = "BackgroundAnimation" Storyboard.TargetProperty = "Opacity" To = "1"/>
                            <ColorAnimation Duration = "0" Storyboard.TargetName = "Background" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" To = "#FFFFFFFF"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "grid">
                                <DiscreteObjectKeyFrame KeyTime = "0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty = "(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName = "BackgroundGradient">
                                <EasingColorKeyFrame KeyTime = "0" Value = "#FF224CA1"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "Pressed">
                        <Storyboard>
                            <ColorAnimation Duration = "0" Storyboard.TargetName = "Background" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" To = "#FF6DBDD1"/>
                            <DoubleAnimation Duration = "0" Storyboard.TargetName = "BackgroundAnimation" Storyboard.TargetProperty = "Opacity" To = "1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration = "0" Storyboard.TargetName = "DisabledVisualElement" Storyboard.TargetProperty = "Opacity" To = ".55"/>
                            <ColorAnimation Duration = "0" Storyboard.TargetName = "Background" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" To = "#FFCCD1D6"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name = "FocusStates">
                    <VisualState x:Name = "Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName = "BorderFocus" Storyboard.TargetProperty = "Visibility">
                                <DiscreteObjectKeyFrame KeyTime = "0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration = "0" Storyboard.TargetName = "BackgroundAnimation" Storyboard.TargetProperty = "Opacity" To = "1"/>
                            <ColorAnimation Duration = "0" Storyboard.TargetName = "Background" Storyboard.TargetProperty = "(Border.Background).(SolidColorBrush.Color)" To = "#FFFFFFFF"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "grid">
                                <DiscreteObjectKeyFrame KeyTime = "0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty = "(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName = "BackgroundGradient">
                                <EasingColorKeyFrame KeyTime = "0" Value = "#FF224CA1"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "Unfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name = "Background" CornerRadius = "3" BorderThickness = "{TemplateBinding BorderThickness}" Background = "White">
                <Grid Background = "{TemplateBinding Background}" Margin = "1">
                    <Border Opacity = "0" x:Name = "BackgroundAnimation" Background = "#FF448DCA"/>
                    <Rectangle x:Name = "BackgroundGradient" Fill = "#FF003876"/>
                </Grid>
            </Border>
            <ContentControl x:Name = "contentPresenter" Content = "{TemplateBinding Content}" ContentTemplate = "{TemplateBinding ContentTemplate}" VerticalAlignment = "{TemplateBinding VerticalContentAlignment}" HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}" Margin = "{TemplateBinding Padding}"/>
            <Rectangle x:Name = "DisabledVisualElement" RadiusX = "3" RadiusY = "3" Fill = "#FFFFFFFF" Opacity = "0" IsHitTestVisible = "false"/>
            <Rectangle x:Name = "FocusVisualElement" RadiusX = "2" RadiusY = "2" Margin = "1" Stroke = "#FF6DBDD1" StrokeThickness = "1" Opacity = "0" IsHitTestVisible = "false"/>
            <Border x:Name = "BorderFocus" BorderBrush = "#FF6CAFFF" BorderThickness = "2" CornerRadius = "0" Visibility = "Collapsed"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key = "ValidationToolTipTemplate">
        <Grid x:Name = "Root" Margin = "5,0" RenderTransformOrigin = "0,0" Opacity = "0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name = "xform" X = "-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name = "OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration = "0"/>
                        <VisualTransition To = "Open" GeneratedDuration = "0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName = "xform" Storyboard.TargetProperty = "X" To = "0" Duration = "0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude = ".3" EasingMode = "EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName = "Root" Storyboard.TargetProperty = "Opacity" To = "1" Duration = "0:0:0.2"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name = "Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName = "Root" Storyboard.TargetProperty = "Opacity" To = "0" Duration = "0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name = "Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName = "xform" Storyboard.TargetProperty = "X" To = "0" Duration = "0"/>
                            <DoubleAnimation Storyboard.TargetName = "Root" Storyboard.TargetProperty = "Opacity" To = "1" Duration = "0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin = "4,4,-4,-4" Background = "#052A2E31" CornerRadius = "5"/>
            <Border Margin = "3,3,-3,-3" Background = "#152A2E31" CornerRadius = "4"/>
            <Border Margin = "2,2,-2,-2" Background = "#252A2E31" CornerRadius = "3"/>
            <Border Margin = "1,1,-1,-1" Background = "#352A2E31" CornerRadius = "2"/>

            <Border Background = "#FFDC000C" CornerRadius = "2"/>
            <Border CornerRadius = "2">
                <TextBlock UseLayoutRounding = "false" Foreground = "White" Margin = "8,4,8,4" MaxWidth = "250" TextWrapping = "Wrap" Text = "{Binding (Validation.Errors)[0].ErrorContent}"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key = "EditButtonColumnResource" x:Name = "EditButtonColumnResource">
        <Button x:Name = "EditRowCommand" Style = "{StaticResource GridImageButton}" Command = "{Binding DataContext.EditDetailCommand, RelativeSource={RelativeSource FindAncestor}}" CommandParameter = "{Binding RelativeSource={RelativeSource Self}}">
            <Image Source = "/rma;component/Images/Toolbar/Edit.png" Width = "13" Height = "13" Stretch = "Uniform" ToolTipService.ToolTip = "{Binding Labels.EditButton, Source={StaticResource ResourceWrapper}}"/>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key = "CancelColumnResource" x:Name = "CancelColumnResource">
        <Button x:Name = "CancelRowCommand" Style = "{StaticResource GridImageButton}" IsEnabled = "{Binding IsAltered, Mode=TwoWay}" Command = "{Binding DataContext.CancelDetailCommand, RelativeSource={RelativeSource FindAncestor}}" CommandParameter = "{Binding RelativeSource={RelativeSource Self}}">
            <Image Source = "/rma;component/Images/Toolbar/Undo.png" Width = "13" Height = "13" Stretch = "Uniform" ToolTipService.ToolTip = "{Binding Labels.CancelDetailButton, Source={StaticResource ResourceWrapper}}"/>

        </Button>
    </DataTemplate>
    <DataTemplate x:Key = "DeleteColoumnResource" x:Name = "DeleteColoumnResource">
        <Button x:Name = "DeleteRowCommand" Style = "{StaticResource GridImageButton}" Command = "{Binding DataContext.DeleteDetailCommand, RelativeSource={RelativeSource FindAncestor}}" CommandParameter = "{Binding RelativeSource={RelativeSource Self}}">
            <Image Source = "/rma;component/Images/Toolbar/Delete.png" Width = "13" Height = "13" Stretch = "Uniform" ToolTipService.ToolTip = "{Binding Labels.DeleteDetailButton, Source={StaticResource ResourceWrapper}}"/>

        </Button>
    </DataTemplate>
    <Style TargetType = "{x:Type TextBlock}">
        <Setter Property = "TextWrapping" Value = "NoWrap"/>
        <Setter Property = "TextTrimming" Value = "None"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "Height" Value = "15"/>
        <Setter Property = "TextAlignment" Value = "Left"/>
        <Setter Property = "Width" Value = "Auto"/>
        <Setter Property = "VerticalAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "Foreground" Value = "#FF003876"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
    </Style>

    <Style x:Key = "MenuTextBlock" TargetType = "{x:Type TextBlock}">
        <Setter Property = "TextWrapping" Value = "NoWrap"/>
        <Setter Property = "TextTrimming" Value = "None"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "Height" Value = "18"/>
        <Setter Property = "TextAlignment" Value = "Left"/>
        <Setter Property = "Width" Value = "Auto"/>
        <Setter Property = "VerticalAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
    </Style>
    <ControlTemplate x:Key = "DisableTextBoxTemplate" TargetType = "{x:Type TextBox}">
        <Grid x:Name = "RootElement">
            <Border x:Name = "OuterBorder" BorderThickness = "{TemplateBinding BorderThickness}" CornerRadius = "2">
                <Grid>
                    <Border x:Name = "ReadOnlyVisualElement" Background = "#00C9C9C9" Opacity = "0"/>
                    <ScrollViewer x:Name = "PART_ContentHost" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}" BorderBrush = "{x:Null}" Foreground = "{x:Null}" Background = "{x:Null}"/>
                </Grid>
            </Border>
            <Border x:Name = "DisabledVisual" BorderBrush = "#00D9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#00B8D6FB"/>
            </Trigger>
            <Trigger Property = "IsEnabled" Value = "False">
                <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
            </Trigger>
            <Trigger Property = "IsReadOnly" Value = "True">
                <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
            </Trigger>
            <Trigger Property = "IsFocused" Value = "True">
                <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#006CAFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key = "TextBoxTemplate" TargetType = "{x:Type TextBox}">
        <Grid x:Name = "RootElement">
            <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                <Grid>
                    <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                    <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
            <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
            </Trigger>
            <Trigger Property = "IsEnabled" Value = "False">
                <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
            </Trigger>
            <Trigger Property = "IsReadOnly" Value = "True">
                <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
            </Trigger>
            <Trigger Property = "IsFocused" Value = "True">
                <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <Style x:Key = "DisableCoreTextBoxStyle" TargetType = "{x:Type myControl:TextBox}">

        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key = "CoreErrorTextBoxStyle" TargetType = "{x:Type myControl:TextBox}">
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "White"/>
        <Setter Property = "Background" Value = "Red"/>
        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key = "CoreRequiredTextBoxStyle" TargetType = "{x:Type myControl:TextBox}">
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "Background" Value = "AliceBlue"/>
        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key = "CoreTextBoxStyle" TargetType = "{x:Type myControl:TextBox}">

        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key = "CoreTextStyle" TargetType = "{x:Type TextBox}">
        <Setter Property = "Height" Value = "24"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="COBOLTextStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CoreTextStyle }" >
        <Setter Property = "FontFamily" Value = "Courier New"/>
    </Style>



    <Style x:Key = "CoreTextBlockStyle" TargetType = "{x:Type myControl:TextBlock}">
        <Setter Property = "TextWrapping" Value = "NoWrap"/>
        <Setter Property = "TextAlignment" Value = "Left"/>
        <Setter Property = "Width" Value = "Auto"/>
        <Setter Property = "IsReadOnly" Value = "True"/>
        <Setter Property = "IsTabStop" Value = "False"/>
        <Setter Property = "Foreground" Value = "#000000"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "IsTabStop" Value = "False"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderThickness = "{TemplateBinding BorderThickness}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#00C9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}" BorderBrush = "{x:Null}" Foreground = "{x:Null}" Background = "{x:Null}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#00D9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#00B8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#006CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key = "GridHeaderStyle" TargetType = "{x:Type myControl:TextBlock}">
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "#FF003876"/>
        <Setter Property = "TextWrapping" Value = "Wrap"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "IsTabStop" Value = "False"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderThickness = "{TemplateBinding BorderThickness}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#00C9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}" BorderBrush = "{x:Null}" Foreground = "{x:Null}" Background = "{x:Null}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#00D9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#00B8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#006CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key = "RequiredStyle" TargetType = "{x:Type myControl:TextBlock}">
        <Setter Property = "TextWrapping" Value = "NoWrap"/>
        <Setter Property = "TextAlignment" Value = "Left"/>
        <Setter Property = "Width" Value = "Auto"/>
        <Setter Property = "IsReadOnly" Value = "True"/>
        <Setter Property = "IsTabStop" Value = "False"/>
        <Setter Property = "FontWeight" Value = "Bold"/>
        <Setter Property = "Foreground" Value = "#FF7f9BBA"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Height" Value = "18"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property = "IsTabStop" Value = "False"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderThickness = "{TemplateBinding BorderThickness}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#00C9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}" BorderBrush = "{x:Null}" Foreground = "{x:Null}" Background = "{x:Null}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#00D9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#00B8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#006CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key = "CoreDateControl" TargetType = "{x:Type myControl:DateControl}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                        <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                    <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                    <GradientStop Color="#FF4084BD"/>
                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                    <GradientStop Color="#FF494949"/>
                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                        <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                        <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                        <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Background="{DynamicResource DisabledBrush}" Style="{DynamicResource CoreDatePickerTextBoxStyle}" />
                        <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                            <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <Style x:Key="CoreDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#5EC9C9C9"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "MaxWidth" Value = "80px"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                       
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key = "ErrorCoreDateControl" TargetType = "{x:Type myControl:DateControl}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                        <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                    <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                    <GradientStop Color="#FF4084BD"/>
                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                    <GradientStop Color="#FF494949"/>
                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                        <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                        <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                        <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Foreground="White" Background="Red" Style="{DynamicResource CoreErrorDatePickerTextBoxStyle}" />
                        <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                            <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    <Style x:Key="CoreErrorDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "MaxWidth" Value = "80px"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key = "RequriedCoreDateControl" TargetType = "{x:Type myControl:DateControl}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                        <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                    <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                    <GradientStop Color="#FF4084BD"/>
                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                    <GradientStop Color="#FF494949"/>
                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                        <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                        <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                        <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Background="AliceBlue" Style="{DynamicResource CoreRequiredDatePickerTextBoxStyle}" />
                        <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                            <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CoreRequiredDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "MaxWidth" Value = "80px"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Border x:Name = "DisabledVisual" BorderBrush = "#FFD9D9D9" BorderThickness = "1" CornerRadius = "2" Visibility = "Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Visibility" TargetName = "DisabledVisual" Value = "Visible"/>
                            <Setter Property = "Opacity" TargetName = "PART_ContentHost" Value = "0.5"/>
                        </Trigger>
                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <Style x:Key = "DisableCoreDateControl" TargetType = "{x:Type myControl:DateControl}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                        <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                            <ColumnDefinition Width="20*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                            <RowDefinition Height="19*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                        <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                    <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                    <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                    <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                    <GradientStop Color="#FF4084BD"/>
                                                    <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                    <GradientStop Color="#FF494949"/>
                                                    <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                        <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                        <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Visibility="Hidden" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                        <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Background="{DynamicResource DisabledBrush}" Style="{DynamicResource CoreDisableDatePickerTextBoxStyle}" />
                        <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                            <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    <Style x:Key="CoreDisableDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#5EC9C9C9"/>
        <Setter Property = "Height" Value = "22"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property = "MaxWidth" Value = "80px"/>

        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property = "HorizontalContentAlignment" Value = "Stretch"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type TextBox}">
                    <Grid x:Name = "RootElement">
                        <Border x:Name = "OuterBorder" BorderBrush = "{TemplateBinding BorderBrush}" BorderThickness = "{TemplateBinding BorderThickness}" Background = "{TemplateBinding Background}" CornerRadius = "2">
                            <Grid>
                                <Border x:Name = "ReadOnlyVisualElement" Background = "#5EC9C9C9" Opacity = "0"/>
                                <ScrollViewer x:Name = "PART_ContentHost" Foreground = "{TemplateBinding Foreground}" HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}" Padding = "{TemplateBinding Padding}" VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FFB8D6FB"/>
                        </Trigger>

                        <Trigger Property = "IsReadOnly" Value = "True">
                            <Setter Property = "Opacity" TargetName = "ReadOnlyVisualElement" Value = "1"/>
                        </Trigger>
                        <Trigger Property = "IsFocused" Value = "True">
                            <Setter Property = "BorderBrush" TargetName = "OuterBorder" Value = "#FF6CAFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CoreDesignerStyle" TargetType="{x:Type myControl:Designer}">

        <Setter Property = "MinWidth" Value = "50"/>
        <Setter Property = "MinHeight" Value = "24"/>
        <Setter Property ="HorizontalAlignment" Value="Left"/>
        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type Button}">
                    <Border x:Name = "border" Background ="#FF4C739F"  Width = "Auto" BorderThickness = "1">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                <GradientStop Color = "#00282828" Offset = "0"/>
                                <GradientStop Color = "#005F5F5F" Offset = "1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name = "CommonStates">
                                <VisualState x:Name = "Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "#FFADB1B4" Storyboard.TargetProperty = "(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName = "textBlock" />

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name = "Normal"/>
                                <VisualState x:Name = "MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "#FF334D7F" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF4C739F" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF657EB1" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF021B4E" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "border" />
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "border" />
                                        <ColorAnimation Duration = "0" To = "White" Storyboard.TargetProperty = "(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName = "textBlock" />
                                        <DoubleAnimation Duration = "0" To = "12" Storyboard.TargetProperty = "(TextBlock.FontSize)" Storyboard.TargetName = "textBlock" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "border">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name = "Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name = "FocusStates">
                                <VisualState x:Name = "Unfocused"/>
                                <VisualState x:Name = "Focused">
                                    <Storyboard>
                                        <ColorAnimation Duration = "0" To = "#FF334D7F" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF003876" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF657EB1" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF021B4E" Storyboard.TargetProperty = "(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName = "grid" />
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName = "border" />
                                        <ColorAnimation Duration = "0" To = "#FF848484" Storyboard.TargetProperty = "(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName = "border" />
                                        <ColorAnimation Duration = "0" To = "White" Storyboard.TargetProperty = "(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName = "textBlock" />
                                        <DoubleAnimation Duration = "0" To = "12" Storyboard.TargetProperty = "(TextBlock.FontSize)" Storyboard.TargetName = "textBlock" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty = "(FrameworkElement.Cursor)" Storyboard.TargetName = "border">
                                            <DiscreteObjectKeyFrame KeyTime = "0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Hand</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name = "grid" Height = "24">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                                    <GradientStop Color = "#005D99D1" Offset = "0"/>
                                    <GradientStop Color = "#002D69A0" Offset = "0.50"/>
                                    <GradientStop Color = "#00104C83" Offset = "0.50"/>
                                    <GradientStop Color = "#00003E74" Offset = "1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation = "Horizontal" HorizontalAlignment = "Center" >
                                <TextBlock x:Name = "textBlock" FontFamily = "Arial" FontSize = "13" Foreground = "#FF99CCFF" Text = "{TemplateBinding Content}" Margin = "6,0,6,0" Height = "14" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="{x:Type ToolTip}"
       TargetType="{x:Type ToolTip}">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Border"
                BorderThickness="1"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="White"
                                Offset="0.0" />
                                        <GradientStop Color="#FF4C739F"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ContentPresenter Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                            <Setter TargetName="Border"
                    Property="SnapsToDevicePixels"
                    Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>



    <Style x:Key="hcs" TargetType="{x:Type GridViewColumnHeader}">

        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>

    </Style>
    
    


    <Style x:Key="CoreComboBoxStyle" TargetType="{x:Type myControl:ComboBox}">
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property = "Height" Value = "24"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property = "BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0">
                    <GradientStop Color = "#FFA9BFD6"/>
                    <GradientStop Color = "#FFCDDAEA" Offset = "1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property = "BorderThickness" Value = "2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Border" Background="White" Margin="{TemplateBinding BorderThickness}">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" >
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="AllowDrop" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                                </Trigger>-->
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CoreRequiredComboBoxStyle" TargetType="{x:Type myControl:ComboBox}">
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property = "Height" Value = "24"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="AliceBlue">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" OpacityMask="AliceBlue">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="AliceBlue">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Border" Margin="{TemplateBinding BorderThickness}" Background="AliceBlue">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="AllowDrop" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CoreErrorComboBoxStyle" TargetType="{x:Type myControl:ComboBox}">
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property = "Height" Value = "24"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Red">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" OpacityMask="Red">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="Red">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Border" Margin="{TemplateBinding BorderThickness}" Background="Red">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="AllowDrop" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>





    <Style x:Key="DisableCoreComboBoxStyle" TargetType="{x:Type myControl:ComboBox}">
        <Setter Property = "VerticalContentAlignment" Value = "Center"/>
        <Setter Property = "HorizontalAlignment" Value = "Left"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property = "Height" Value = "24"/>
        <Setter Property = "FontSize" Value = "13"/>
        <Setter Property = "FontFamily" Value = "Arial"/>
        <Setter Property = "Foreground" Value = "Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                        <Setter Property="Background" TargetName="splitBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type myControl:ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="#5EC9C9C9">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" OpacityMask="#5EC9C9C9">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="#5EC9C9C9">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Border" Margin="{TemplateBinding BorderThickness}" Background="#5EC9C9C9">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="AllowDrop" Value="True"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
   

</ResourceDictionary>