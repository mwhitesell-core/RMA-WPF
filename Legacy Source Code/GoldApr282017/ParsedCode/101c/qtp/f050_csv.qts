; DOC: F050_CSV.QZS
; DOC: PHYSICIAN REVENUE ANALYSIS with delimiter and column heading (requested by Brad)
; DOC: RUN FOR: ROSS
;
;PROGRAM PURPOSE : REVENUE ANALYSIS BY CLINIC
;
;DATE           WHO     DESCRIPTION
;2015/Dec/11    MC      - original (clone from r011_csv.qts and f050ma1.qts and f050_bi.qts)
;                       - this report would be run in next monthend; MUST be run after r011_csv.qts
;			  because this program uses r011_ped.sf which is generated from r011_csv.qts 
;			  to determine what the previous ped should be


cancel clear
set process nolimit
set lock record update 

request extract_f050hst		on calculation errors report	&
				on edit errors report

access *r011_ped                                        &
        link x-ep-yr, x-prev-ped                        &
         to  ep-yr, iconst-date-period-end of f050-doc-revenue-mstr-history     &
        link docrev-dept                                &
         to  dept-nbr of f070-dept-mstr opt		&
        link docrev-doc-nbr 				&
	 to doc-nbr     of f020-doctor-mstr  opt	&
 	link docrev-oma-cd  				&
	 to fee-oma-cd  of f040-oma-fee-mstr opt

def name char*30 			                     &
   = pack(doc-name + "," + doc-inits + "(" + doc-nbr + ")" ) &
	if docrev-doc-nbr <> '301'	                     &
       else "BARNES,CC (481)"

define doc-nbr char*3 = docrev-doc-nbr if docrev-doc-nbr <> '301' &
	else '481'

def fixed-docrev-oma-cd char*5 			&
    =    docrev-oma-cd[1:4]			&
      + "A"					&
	 if docrev-oma-cd[5:1] = "M"		&
 else            docrev-oma-cd

def oma-cd-desc char*55 				&
    = pack(fixed-docrev-oma-cd + " - " + fee-desc)	&
	 if record f040-oma-fee-mstr exists		&
 else pack(fixed-docrev-oma-cd + " - UNKNOWN FEE CODE")

def oma-code-only char*4 = docrev-oma-cd[1:4]

def rpt-sort-seq char*4 			&
;	OUTPATIENT
     = "E001"	if oma-code-only = "A135"	&
  else "E002"	if oma-code-only = "A435"	&
  else "E003"	if oma-code-only = "A136"	&
  else "E004"	if oma-code-only = "A133"	&
  else "E005"	if oma-code-only = "A134"	&
  else "E006"	if oma-code-only = "A138"	&
  else "E007"	if oma-code-only = "K990"	&
  else "E008"	if oma-code-only = "K991"	&
  else "E009"	if oma-code-only = "K992"	&
  else "E010"	if oma-code-only = "K993"	&
  else "E011"	if oma-code-only = "K994"	&
  else "E012"	if oma-code-only = "K995"	&
  else "E013"	if oma-code-only = "K996"	&
  else "E014"	if oma-code-only = "K997"	&

; 	INPATIENT
  else "D001"	if oma-code-only = "C135"	&
  else "D002"	if oma-code-only = "C435"	&
  else "D003"	if oma-code-only = "C136"	&
  else "D004"	if oma-code-only = "C133"	&
  else "D005"	if oma-code-only = "C134"	&
  else "D006"	if oma-code-only = "C132"	&
  else "D007"	if oma-code-only = "C137"	&
  else "D008"	if oma-code-only = "C139"	&
  else "D009"	if oma-code-only = "C138"	&
  else "D010"	if oma-code-only = "C121"	&
  else "D011"	if oma-code-only = "C101"	&
  else "D012"	if oma-code-only = "C990"	&
  else "D013"	if oma-code-only = "C991"	&
  else "D014"	if oma-code-only = "C992"	&
  else "D015"	if oma-code-only = "C993"	&
  else "D016"	if oma-code-only = "C994"	&
  else "D017"	if oma-code-only = "C995"	&
  else "D018"	if oma-code-only = "C996"	&
  else "D019"	if oma-code-only = "C997"	&

;	ACUTE
  else "A001"	if oma-code-only = "R849"	&
  else "A002"	if oma-code-only = "G325"	&
  else "A003"	if oma-code-only = "G323"	&
  else "A004"	if oma-code-only = "G330"	&
  else "A005"	if oma-code-only = "G331"	&

;	NEW CHRONIC DIALYSIS 
  else "B000"	if oma-code-only = "G860"	&
  else "B000"	if oma-code-only = "G862"	&
  else "B000"	if oma-code-only = "G863"	&
  else "B000"	if oma-code-only = "G864"	&
  else "B000"	if oma-code-only = "G865"	&
  else "B000"	if oma-code-only = "G866"	&

;	TRANSPLANT
  else "C000"	if oma-code-only = "G408"	&
  else "C000"	if oma-code-only = "G409"	&
  else "C000"	if oma-code-only = "G412"	&

;      MISCELLANEOUS
  else "G000"	if oma-code-only[1:3] = "MIS"	&

;      OTHER
  else "F000" 

define presort-code 	char*8 = rpt-sort-seq + oma-code-only
define grouping 	char*1	= rpt-sort-seq[1:1] 

subfile f050a keep include		&
  dept-company	     , &
  docrev-clinic-1-2  , &
  docrev-dept        , &
  doc-nbr            , &
  docrev-location    , &
  fixed-docrev-oma-cd, &
  presort-code	     , &
  grouping           , & 
  oma-cd-desc	     , & 
  docrev-mtd-in-rec  , &
  docrev-mtd-in-svc  , &
  docrev-mtd-out-rec , &
  docrev-mtd-out-svc , &
  docrev-ytd-in-rec  , &
  docrev-ytd-in-svc  , &
  docrev-ytd-out-rec , &
  docrev-ytd-out-svc , &
  x-prev-ped	     , &
  name


request create_f050_csv		on calculation errors report	&
				on edit errors report

access *f050a

def x-num-cr integer unsigned size 2 = 13
def x-cr        char*1 = char(x-num-cr)

def x-num-lf integer unsigned size 2 = 10
def x-lf        char*1 = char(x-num-lf)
def x-cr-lf     char*2 = x-cr + x-lf

def x-delimiter char size 1 = "~"

def ped char*10 = ascii(x-prev-ped)[1:4] + '-' +	&
		  ascii(x-prev-ped)[5:2] + '-' +	&
		  ascii(x-prev-ped)[7:2]

subfile /foxtrot/bi/bi_f050_csv portable keep include		&
  ped			 ,&
	x-delimiter	 ,&
  docrev-clinic-1-2      ,&
	x-delimiter	 ,&
  docrev-dept            ,&
	x-delimiter	 ,&
	doc-nbr          ,&
	x-delimiter	 ,&	
	docrev-location  ,&
	x-delimiter	 ,&	
  fixed-docrev-oma-cd    ,&
	x-delimiter	 ,&	
  presort-code           ,&
	x-delimiter	 ,&	
  grouping               ,&
	x-delimiter	 ,&	
  oma-cd-desc            ,&
	x-delimiter	 ,&	
  docrev-mtd-in-rec      ,&
	x-delimiter	 ,&	
  docrev-mtd-in-svc      ,&
	x-delimiter	 ,&	
  docrev-mtd-out-rec     ,&
	x-delimiter	 ,&	
  docrev-mtd-out-svc     ,&
	x-delimiter	 ,&	
  docrev-ytd-in-rec      ,&
	x-delimiter	 ,&	
  docrev-ytd-in-svc      ,&
	x-delimiter	 ,&	
  docrev-ytd-out-rec     ,&
	x-delimiter	 ,&	
  docrev-ytd-out-svc     ,&
	x-delimiter	 ,&	
  name                   ,&
   x-lf
  
build $pb_obj/f050_csv 



