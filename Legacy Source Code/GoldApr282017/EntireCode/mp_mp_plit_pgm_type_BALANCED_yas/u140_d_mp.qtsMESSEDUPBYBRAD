; Program: u140_d.qts
; Purpose:	Calculate individual doctor AFP conversion payment /submission amounts 
;		factoring values sent from MOH by the RA payments
; 
; modification history
; 04/jul/01 b.e.	-original
; 04/aug/12 b.e.	-add record to f075 if payment comes in for doctor
;			 not on file .. 
; 04/oct/16 b.e.	- store afp-submission-amt in tmp-counter-2
; 05/mar/08 M.C.        - substitute afp-payment-percentage with afp-multi-doc-ra-percentage
; 2005/apr/08 b.e. - set lock update statement
; 2005/jun/09 M.C. - change def factored with zoned*11 numeric

cancel clear
set process nolimit
run u140_d
;set lock file update 
set lock record update 

;-------------------------------------------------------
request u140_find_matching_doc_in_f075			&
                on edit        errors report    	&
                on calculation errors report

access afp-a2s-file					&
	link (nconvert(doc-afp-paym-solo))		&
	to   doc-ohip-nbr	of f020-doctor-mstr opt &
        link doc-nbr of f020-doctor-mstr		&
	to   doc-nbr of f075-afp-doc-mstr opt 		&
        link doc-afp-paym-group of afp-a2s-file         &
        to   doc-afp-paym-group of f074-afp-group-mstr opt

; select "E"arning type afp groups
select if    (   doc-afp-paym-group of afp-a2s-file	&
	       = doc-afp-paym-group of f020-doctor-mstr	&
             )                                                          &
         and (afp-group-process-flag of f074-afp-group-mstr = "E")

def x-conversion-amt    zoned*11 numeric        &
        = afp-conversion-amt                    &
                if afp-conversion-sign = " "    &
    else  0 - afp-conversion-amt

def x-submission-amt    zoned*11 numeric        &
        = afp-submission-amt                    &
                if afp-submission-sign = " "    &
    else  0 - afp-submission-amt

def x-doc-nbr char*3 = "000" if not record f020-doctor-mstr exists &
        else doc-nbr of f020-doctor-mstr

subfile u140_d1 keep include	&
  afp-a2s-file,			&
  x-conversion-amt,		&
  x-submission-amt,		&
; doc-nbr of f020-doctor-mstr
  x-doc-nbr

output tmp-doctor-alpha add
  item doc-ohip-nbr	 final nconvert(doc-afp-paym-solo of afp-a2s-file) 
  item doc-nbr		 final x-doc-nbr	 ;doc-nbr of f020-doctor-mstr
  item tmp-alpha-field-1 final doc-afp-paym-group of afp-a2s-file
; 2005/06/09 - MC
;  item tmp-counter-1     final afp-conversion-amt of afp-a2s-file
;  item tmp-counter-2	 final afp-submission-amt of afp-a2s-file
  item tmp-counter-1     final x-conversion-amt 
  item tmp-counter-2	 final x-submission-amt 
; 2005/06/09 - end

;-------------------------------------------------------
request u140_ignore_any_duplicate_key_errors		&
                on edit        errors report    	&
                on calculation errors report

access afp-a2s-file					&
	link (nconvert(doc-afp-paym-solo))		&
	to   doc-ohip-nbr	of tmp-doctor-alpha opt	&
	link (nconvert(doc-afp-paym-solo))		&
	to   doc-ohip-nbr	of f020-doctor-mstr	&
        link doc-afp-paym-group of afp-a2s-file         &
        to   doc-afp-paym-group of f074-afp-group-mstr opt

select if     not record tmp-doctor-alpha exist                                &
           or (    tmp-alpha-field-1 <> doc-afp-paym-group of afp-a2s-file     &
               and doc-nbr of f020-doctor-mstr  <> doc-nbr of tmp-doctor-alpha &
              )                                                               ;&
;        and (afp-group-process-flag of f074-afp-group-mstr = "E")

; 2005/06/09 - MC
def x-conversion-amt    zoned*11 numeric        &
        = afp-conversion-amt                    &
                if afp-conversion-sign = " "    &
    else  0 - afp-conversion-amt

def x-submission-amt    zoned*11 numeric        &
        = afp-submission-amt                    &
                if afp-submission-sign = " "    &
    else  0 - afp-submission-amt

; 2005/06/09 - end
def x-doc-nbr char*3 = "000" if not record f020-doctor-mstr exists &
        else doc-nbr of f020-doctor-mstr

subfile u140_d1 append include	&
  afp-a2s-file,			&
  x-conversion-amt,		&
  x-submission-amt,		&
  x-doc-nbr
;  doc-nbr of f020-doctor-mstr

output tmp-doctor-alpha alias tmp-add add on errors report
  item doc-ohip-nbr	 final nconvert(doc-afp-paym-solo of afp-a2s-file) 
  item doc-nbr		 final x-doc-nbr	;doc-nbr of f020-doctor-mstr
  item tmp-alpha-field-1 final doc-afp-paym-group of afp-a2s-file
; 2005/06/09 - MC
;  item tmp-counter-1     final afp-conversion-amt of afp-a2s-file
;  item tmp-counter-2	 final afp-submission-amt of afp-a2s-file
  item tmp-counter-1     final x-conversion-amt 
  item tmp-counter-2	 final x-submission-amt 
; 2005/06/09 - end
 
;-------------------------------------------------------
request u140_update_f075_with_conversion_payments	&
                on edit        errors report    	&
                on calculation errors report

access *u140_d1						&
	link (nconvert(doc-afp-paym-solo)),		&
	    x-doc-nbr					&
	to   doc-ohip-nbr,				&
	     doc-nbr of tmp-doctor-alpha opt		&
        link x-doc-nbr					&
	to   doc-nbr of f075-afp-doc-mstr opt 		&
	link doc-afp-paym-group of u140_d1		&
	to   doc-afp-paym-group of f074-afp-group-mstr opt

select if  doc-afp-paym-group of u140_d1		&
	 = doc-afp-paym-group of f075-afp-doc-mstr

;sort    on doc-ohip-nbr         &
;        on doc-afp-paym-group

;temp x-rec-count
;item x-rec-count =x-rec-count + 1 reset at doc-afp-paym-group

; 2005/06/09 - MC
;def x-afp-payment-amt-factored						&
;   =  round(  afp-conversion-amt     of u140_d1				&
def x-afp-payment-amt-factored	zoned*11 numeric 		&
   =  round(  x-conversion-amt     of u140_d1				&
; 2005/06/09 - end
; 2005/03/08 - MC 
;	    * (  afp-payment-percentage of f075-afp-doc-mstr		&
;	       / 100							&
;;;;;	    * (  afp-multi-doc-ra-percentage of f075-afp-doc-mstr	&
;;;;;	       / 100000							&
; 2005/03/08 - end
;;;;;	      )								&
	   ) 

;temp x-afp-payment-amt-factor-total
;item x-afp-payment-amt-factor-total	&
; =   x-afp-payment-amt-factor-total				&
;   + x-afp-payment-amt-factored					&
;	   if x-rec-count <> afp-duplicate-doc-count		

;100 - x-ra-percentage

; 2005/06/09 - MC
;def x-afp-submission-amt-factored					&
;   =  round(  afp-submission-amt      of u140_d1			&
def x-afp-submission-amt-factored zoned*11 numeric			&
   =  round(  x-submission-amt      of u140_d1			&
; 2005/06/09 - end
; 2005/03/08 - MC 
;	    * (  afp-payment-percentage of f075-afp-doc-mstr		&
;	       / 100							&
;;;;;	    * (  afp-multi-doc-ra-percentage of f075-afp-doc-mstr	&
;;;;;	       / 100000							&
; 2005/03/08 - end
;;;;;	      ) &;  if afp-payment-percentage of f075-afp-doc-mstr <> 0	&
	   )

output f075-afp-doc-mstr alias f075-update update	&
     if record f075-afp-doc-mstr exists
  item afp-reporting-mth  	final afp-reporting-mth of f074-afp-group-mstr 
; 2005/06/09 - MC
;  item afp-payment-amt-total	final afp-conversion-amt
  item afp-payment-amt-total	final x-conversion-amt of u140_d1
; 2005/06/09 - end
  item afp-payment-amt		final x-afp-payment-amt-factored
  item afp-submission-amt	final x-afp-submission-amt-factored

output f075-afp-doc-mstr alias f075-add    add		&
     if not record f075-afp-doc-mstr exists
  item doc-nbr 			final x-doc-nbr of u140_d1 
  item doc-ohip-nbr 		final nconvert(doc-afp-paym-solo)
  item doc-afp-paym-group 	final doc-afp-paym-group of u140_d1
  item afp-reporting-mth  	final afp-reporting-mth of f074-afp-group-mstr 
; 2005/06/09 - MC
;  item afp-payment-amt-total	final afp-conversion-amt
  item afp-payment-amt-total	final x-conversion-amt of u140_d1
  item afp-payment-amt		final x-afp-payment-amt-factored
;  item afp-submission-amt	final afp-submission-amt of u140_d1
  item afp-submission-amt	final x-afp-submission-amt-factored   
; 2005/06/09 - end

build $obj/u140_d_mp
