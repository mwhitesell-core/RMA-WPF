;#> PROGRAM-ID.     u014_f050.qts
;
;       ((C)) Dyad Technologies
;
;    PURPOSE: transfer the current status of the f050 and f050tp revenue
;	     files to the appropriate history files to keep a snap of the
;	      revenue at the end of the month.
;
;    MODIFICATION HISTORY
;     DATE     WHO      DESCRIPTION
; 2000/jan/10  B.E.	- original
; 2000/jan/18  B.E.	- constants master PED has yyyymmdd but each dd
;			  is different for each clinic and we want all
;			  clinic data to be easily accessible for the
;			  same period. Therefore the 'dd' portion of the
;			  clinic's PED is ignored and '01' is used. For
;			  the 13th month the 'update' action on the output
;			  statement is will 12th monthend values.
; 2000/apr/27 B.E.      - changed output on f050-history to have separate
;                         output statements for add and update
;		         

cancel clear
set stacksize 10000
run u014_f050

set default
set lock file update

set process nolimit

; define globals for this run
use $use/get_const_rec_7_values_globals.qts

global temp x-selected-clinic       num*2 	parm			&
	prompt "Enter CLINIC(2 digits) to be transferred to history: " 
global temp x-selected-clinic-alpha char*2 

;-------------------------------------------------------------------------------
; obtain current costing "constants" and pass to subsequent requests
;
use $use/get_const_rec_7_values.qts

;-------------------------------------------------------------------------------
;

item x-selected-clinic-alpha        = ascii(x-selected-clinic,2)

request u014_transfer_f050_to_f050_hist         &
                on edit        errors report    &
                on calculation errors report


;access f050tp-doc-revenue-mstr
access f050-doc-revenue-mstr			&
    link x-selected-clinic			&
      to iconst-clinic-nbr-1-2  of iconst-mstr-rec

select if docrev-clinic-1-2 = x-selected-clinic-alpha


;  (PED from constants master has yyyymmdd however each clinic's dd is
;   different for the same month.
;   Therefore use hard coded '01' for dd so that each clinics data is 
;   in effect stored at the yyyymm level and thus monthly values can
;   be easily obtained across clinic)
def x-iconst-date-period-end date = 					&
     nconvert(								&
	         ascii (						&
		        ( iconst-date-period-end of iconst-mstr-rec	&
		         /100   					&
		        )						&
		       ,6)						&
    	       + '01'							&
	     )

;(the 13th monthend processing will use the 'update' action on the output
; statement to update the 12th monthend values)

output f050-doc-revenue-mstr-history add       		&	
  if not record f050-doc-revenue-mstr-history exists	&
	using w-ep-yr, 					&
	      x-iconst-date-period-end, 		&
	      docrev-key of f050-doc-revenue-mstr 

  item ep-yr 			initial w-ep-yr
  item iconst-date-period-end	initial x-iconst-date-period-end

output f050-doc-revenue-mstr-history update    		&	
  if     record f050-doc-revenue-mstr-history exists	&
	using w-ep-yr, 					&
	      x-iconst-date-period-end, 		&
	      docrev-key of f050-doc-revenue-mstr 

  item ep-yr 			final w-ep-yr
  item iconst-date-period-end	final x-iconst-date-period-end

build $obj/u014_f050
