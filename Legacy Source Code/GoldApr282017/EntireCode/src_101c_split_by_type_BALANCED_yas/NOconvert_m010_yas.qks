;#> PROGRAM-ID.     M010.QKS
;
;	((C)) DYAD TECHNOLOGIES
;
;   PROGRAM PURPOSE : TO ENTER PATIENT DATA
;
;   MODIFICATION HISTORY
;        DATE       WHO        DESCRIPTION
;	91/02/04   D.B.		-ORIGINAL (SMS 138)
;	91/05/30   D.B.		-PDR 496 - CHANGE NUMBER FOR NT AND BC
;	91/09/23   K.S.		-ADDED LOOKUP TABLE ON ACRONYM FIELD
;				-ADDED PATH PROCEDURE
;	91/11/07   Y.B.         -PDR 532 - CHANGE BC FROM 10 AND 11
;				 DIGITS TO 10 AND SK FROM 8 DIGITS TO 9
;	91/11/13   M.C.		-IF BIRTHDATE CHANGED, CHECK PAT-OHIP-MMYY
;				 AND/OR PAT-CHART-NBR DOES NOT EXIST
set default
set nesting 200


screen $pb_obj/m010

temp w-ch16 char*16 reset at startup
;USED FOR LOOKUP ON ACRONYM

file f010-pat-mstr
    access viaindex pat-acronym   using pat-acronym  	&
	request pat-acronym
    access viaindex pat-health-nbr using pat-health-nbr	&
	request pat-health-nbr
    access viaindex pat-ohip-mmyy using pat-ohip-mmyy	&
	request pat-ohip-mmyy
    access viaindex pat-chart-nbr using pat-chart-nbr	&
	request pat-chart-nbr
    access viaindex key-pat-mstr using w-ch16
item pat-health-nbr initial 0
item pat-ohip-mmyy initial ' '
item pat-chart-nbr initial ' '
item pat-date-last-maint initial sysdate
temp x-pat-health-nbr
temp w-pat-health-nbr
temp w-pat-health-nbr-1
temp w-pat-health-nbr-3
temp w-pat-health-nbr-5
temp w-pat-health-nbr-7
temp w-pat-health-nbr-9
temp w-prov-length
temp w-msg-nbr char*2
temp w-password char *5
def w-subscr-addr3 char*21 	&
         = 'HAMILTON ONT.' if subscr-addr3 = 'H'		&
    else 'STONEY CREEK ONT.' if subscr-addr3 = 'STC'	&
    else 'DUNDAS ONT.' if subscr-addr3 = 'D'		&
    else 'DUNNVILLE ONT.' if subscr-addr3 = 'DUN'		&
    else 'WATERDOWN ONT.' if subscr-addr3 = 'WAT'		&
    else 'ST. CATHARINES ONT.' if subscr-addr3 = 'SC'	&
    else 'OAKVILLE ONT.' if subscr-addr3 = 'O'		&
    else 'GRIMSBY ONT.' if subscr-addr3 = 'G'		&
    else 'FRUITLAND ONT.' if subscr-addr3 = 'FR'		&
    else 'HANNON ONT.' if subscr-addr3 = 'HA'		&
    else 'FLAMBORO ONT.' if subscr-addr3 = 'F'		&
    else 'NIAGARA O T LAKE ONT.' if subscr-addr3 = 'NOL'	&
    else 'NIAGARA FALLS ONT.' if subscr-addr3 = 'NF'	&
    else 'FORT ERIE ONT.' if subscr-addr3 = 'FE'		&
    else 'WELLAND ONT.' if subscr-addr3 = 'W'		&
    else 'TORONTO ONT.' if subscr-addr3 = 'T'		&
    else 'DON MILLS ONT.' if subscr-addr3 = 'DM'		&
    else 'WILLOWDALE ONT.' if subscr-addr3 = 'WI'		&
    else 'BURLINGTON ONT.' if subscr-addr3 = 'B'		&
    else 'MARKHAM ONT.' if subscr-addr3 = 'MKM'		&
    else 'RICHMOND HILL ONT.' if subscr-addr3 = 'RH'	&
    else 'THOROLD ONT.' if subscr-addr3 = 'TH'		&
    else 'MALTON ONT.' if subscr-addr3 = 'MA'		&
    else 'MISSISSAUGA ONT.' if subscr-addr3 = 'MI'		&
    else 'SCARBOROUGH ONT.' if subscr-addr3 = 'SCA'	&
    else 'NORTH YORK ONT.' if subscr-addr3 = 'NY'		&
    else 'BEAMSVILLE ONT.' if subscr-addr3 = 'BEA'		&
    else 'BRAMPTON ONT.' if subscr-addr3 = 'BR'		&
    else 'WESTON ONT.' if subscr-addr3 = 'WE'		&
    else 'ETOBICOKE ONT.' if subscr-addr3 = 'ET'		&
    else 'BRANTFORD ONT.' if subscr-addr3 = 'BRA'		&
    else 'GEORGETOWN ONT.' if subscr-addr3 = 'GEO'		&
    else 'GUELPH ONT.' if subscr-addr3 = 'GUE'		&
    else 'THORNHILL ONT.' if subscr-addr3 = 'THO'		&
    else 'DOWNSVIEW ONT.' if subscr-addr3 = 'DO'		&
    else 'ISLINGTON ONT.' if subscr-addr3 = 'I'		&
    else 'REXDALE ONT.' if subscr-addr3 = 'RX'		&
    else 'AGINCOURT ONT.' if subscr-addr3 = 'A'		&
    else 'ANCASTER ONT.' if subscr-addr3 = 'AN'		&
    else 'MILLGROVE ONT.' if subscr-addr3 = 'MIL'		&
    else 'CALEDONIA ONT.' if subscr-addr3 = 'C'		&
    else 'SIMCOE ONT.' if subscr-addr3 = 'SIM'		&
    else 'HAGERSVILLE ONT.' if subscr-addr3 = 'HAG'	&
    else 'KITCHENER ONT.' if subscr-addr3 = 'K'		&
    else 'CAMPBELLVILLE ONT.' if subscr-addr3 = 'CA'	&
    else 'COPETOWN ONT.' if subscr-addr3 = 'COP'		&
    else 'PARIS ONT.' if subscr-addr3 = 'P'		&
    else 'WATERFORD ONT.' if subscr-addr3 = 'WF'		&
    else 'BARRIE ONT.' if subscr-addr3 = 'BA'		&
    else 'CAMBRIDGE ONT.' if subscr-addr3 = 'CAM'		&
    else 'SUDBURY ONT.' if subscr-addr3 = 'S'		&
    else 'GREENSVILLE ONT.' if subscr-addr3 = 'GR'		&
    else 'BINBROOK ONT.' if subscr-addr3 = 'BI'		&
    else 'CAISTOR CENTRE ONT.' if subscr-addr3 = 'CC'		&
    else 'CARLISLE ONT.' if subscr-addr3 = 'CAR'	&
    else 'CAYUGA ONT.' if subscr-addr3 = 'CY'		&
    else 'FREELTON ONT.' if subscr-addr3 = 'FRE'	&
    else 'LYNDEN ONT.' if subscr-addr3 = 'L'		&
    else 'MILTON ONT.' if subscr-addr3 = 'ML'		&
    else 'MOUNT HOPE ONT.' if subscr-addr3 = 'MH'		&
    else 'PORT COLBORNE ONT.' if subscr-addr3 = 'PC'		&
    else 'PUSLINCH ONT.' if subscr-addr3 = 'PU'		&
    else 'SAULT STE. MARIE ONT.' if subscr-addr3 = 'SSM'	&
    else 'SMITHVILLE ONT.' if subscr-addr3 = 'SM'		&
    else 'THUNDER BAY ONT.' if subscr-addr3 = 'TB'		&
    else 'WINONA ONT.' if subscr-addr3 = 'WIN'		&
    else subscr-addr3

file f010-pat-mstr alias f010-pat-keys reference

file constants-mstr-rec-5 designer

file f094-msg-mstr reference
    access via msg-sub-key-1,msg-sub-key-23 using 'M',subscr-msg-nbr

;	FILE F030-LOCATIONS-MSTR REFERENCE
;	ACCESS VIA LOC-NBR USING PAT-LOCATION-FIELD


use $pb_src/std_hilite.qks nol

title 'PATIENT MASTER MAINTENANCE' at 1,54

skip to 3
align ( id 1, label 4, data 22 )
field pat-prov-cd of f010-pat-mstr predisplay label "PROVINCE CODE   :"
field pat-acronym   of f010-pat-mstr display  label "ACRONYM         :"
field pat-health-nbr of f010-pat-mstr    label  "HEALTH NBR      :" &
	lookup noton f010-pat-mstr                &
	message "HEALTH NBR IS ALREADY ASSIGNED TO ANOTHER PATIENT"  &
	bwz
field pat-ohip-mmyy of f010-pat-mstr     &
 	lookup noton f010-pat-mstr       &
	message "OHIP NBR IS ARLEADY ASSSIGNED TO ANOTHER PATIENT" &
        label "OHIP/DIRECT NBR :"
field pat-chart-nbr of f010-pat-mstr      &
        lookup noton f010-pat-mstr        &
        message "CHART NBR IS ALREADY ASSIGNED TO ANOTHER PATIENT"  &
        label "CHART NBR       :"
skip 1
field pat-surname of f010-pat-mstr required   label "SURNAME         :"
align ( , label 4, data 22 )
field pat-given-name of f010-pat-mstr required label "GIVEN NAME      :"
field pat-init of f010-pat-mstr required      label "INITIALS        :"
skip 1
align ( id 1, label 4, data 22 )
field pat-birth-date of f010-pat-mstr required label "BIRTH DATE      :"
align (, label 4, data 22 )
field pat-sex of f010-pat-mstr required       label "SEX             :"
skip 1
align ( id 1, label 4, data 22 )
field pat-health-65-ind of f010-pat-mstr      label "HEALTH 65 IND   :"
align (, label 4, data 22 )
field pat-version-cd of f010-pat-mstr         label "VERSION CODE    :"
field pat-expiry-date of f010-pat-mstr        label "EXPIRY DATE     :"
skip 1
align ( id 1, label 4, data 22 )
field pat-phone-nbr of f010-pat-mstr          label "PHONE NBR       :"
align (, label 4, data 22 )
field pat-location-field of f010-pat-mstr  display   label "LAST LOCATION   :"
;	LOOKUP ON F030-LOCATION-MSTR
align ( id 40, label 43, data 59)
skip to 3
field subscr-addr1 of f010-pat-mstr required  label "ADDRESS 1     :"
align (,43,59)
field subscr-addr2 of f010-pat-mstr           label "        2     :"
field subscr-addr3 of f010-pat-mstr required  label "CITY/PROV     :"
field subscr-postal-cd of f010-pat-mstr       label "POSTAL CODE   :"
skip 1
align ( id 40, label 43, data 59)
field subscr-msg-nbr of f010-pat-mstr         label "MSG NBR       :"
;	LOOKUP ON F094-MSG-MSTR
;	MESSAGE "*E* Message Number not defined. Use . to search."
align (,43,59)
field subscr-date-msg-nbr-effective-to of f010-pat-mstr	&
	required if subscr-msg-nbr <> '00'    label "MSG EFFECT TO :"
field subscr-auto-update of f010-pat-mstr     label "AUTO UPDATE   :" &
	predisplay
align ( , label 43, data 61 )
skip 1
field pat-last-doc-nbr-seen of f010-pat-mstr label "LAST DOC SEEN   :" &
	display
field pat-date-last-maint of f010-pat-mstr   label "LAST MAINT DATE :" &
	display
field pat-date-last-visit of f010-pat-mstr   label "LAST VISIT DATE :" &
	display
field pat-date-last-admit of f010-pat-mstr   label "LAST ADMIT DATE :" &
	display
field pat-in-out of f010-pat-mstr            label "LAST I/O IND    :" &
	display
field pat-total-nbr-visits of f010-pat-mstr  label "TOTAL NBR VISITS:" &
	display
field pat-total-nbr-claims of f010-pat-mstr  label "TOTAL NBR CLAIMS:" &
	display
field pat-nbr-outstanding-claims of f010-pat-mstr	&
        display                              label "OUTSTAND. CLAIMS:"
field key-pat-mstr of f010-pat-mstr          display	&
                                              label "INVISIBLE KEY   :"
field w-password nolabel noecho display

procedure internal mod_10_check_digit
begin

let w-pat-health-nbr-1 =	&
	     floor(x-pat-health-nbr / 1000000000) * 2

if w-pat-health-nbr-1 < 10
  then let w-pat-health-nbr-1 = w-pat-health-nbr-1
  else let w-pat-health-nbr-1 = floor(w-pat-health-nbr-1 / 10)	&
	   + mod(w-pat-health-nbr-1,10)

let w-pat-health-nbr-3 =	&
	floor(mod(x-pat-health-nbr,100000000) / 10000000) * 2

if w-pat-health-nbr-3 < 10
  then let w-pat-health-nbr-3 = w-pat-health-nbr-3
  else let w-pat-health-nbr-3 = floor(w-pat-health-nbr-3 / 10)	&
	   + mod(w-pat-health-nbr-3,10)

let w-pat-health-nbr-5 =	&
	floor(mod(x-pat-health-nbr,1000000) / 100000) * 2

if w-pat-health-nbr-5 < 10
  then let w-pat-health-nbr-5 = w-pat-health-nbr-5
  else let w-pat-health-nbr-5 = floor(w-pat-health-nbr-5 / 10)	&
	   + mod(w-pat-health-nbr-5,10)

let w-pat-health-nbr-7 =	&
	floor(mod(x-pat-health-nbr,10000) / 1000) * 2

if w-pat-health-nbr-7 < 10
  then let w-pat-health-nbr-7 = w-pat-health-nbr-7
  else let w-pat-health-nbr-7 = floor(w-pat-health-nbr-7 / 10)	&
	   + mod(w-pat-health-nbr-7,10)

let w-pat-health-nbr-9 =	&
	floor(mod(x-pat-health-nbr,100) / 10) * 2

if w-pat-health-nbr-9 < 10
  then let w-pat-health-nbr-9 = w-pat-health-nbr-9
  else let w-pat-health-nbr-9 = floor(w-pat-health-nbr-9 / 10)	&
	   + mod(w-pat-health-nbr-9,10)

let w-pat-health-nbr =		&
	     floor(mod(x-pat-health-nbr,1000000000) / 100000000)+ &
	     floor(mod(x-pat-health-nbr,10000000) / 1000000)	+ &
	     floor(mod(x-pat-health-nbr,100000) / 10000)	+ &
	     floor(mod(x-pat-health-nbr,1000) / 100)	+	&
	     w-pat-health-nbr-1				+	&
	     w-pat-health-nbr-3				+	&
	     w-pat-health-nbr-5				+	&
	     w-pat-health-nbr-7				+	&
	     w-pat-health-nbr-9

let w-pat-health-nbr = mod(w-pat-health-nbr,10)

if w-pat-health-nbr > 0
  then let w-pat-health-nbr = 10 - w-pat-health-nbr

end

procedure input pat-health-nbr
begin
  if fieldtext <> ' ' and 10 <> (size(fieldtext))
  then error 'Patient Health Number must be 10 digits long'
  end

procedure edit pat-health-nbr
begin
  if pat-health-nbr <> 0 and pat-prov-cd <> 'ON'
    then error 'Health Nbr is not allowed for Out of Province Patient'
  if pat-health-nbr <> 0 and pat-prov-cd  = 'ON'
    then begin
      if pat-ohip-mmyy <> ' ' and		&
         pat-ohip-mmyy[1:1] >= 'A' and pat-ohip-mmyy[1:1] <= 'Z'
         then error "Bill Direct Nbr already assigned, Health Nbr is not allowed"
      let x-pat-health-nbr = pat-health-nbr
      do internal mod_10_check_digit
      if w-pat-health-nbr <> (mod(pat-health-nbr, 10))
        then  error "Invalid Health Care Nbr"
;     GET F010-PAT-KEYS OPTIONAL VIAINDEX PAT-HEALTH-NBR  &
;      USING PAT-HEALTH-NBR
;     IF ACCESSOK
;	THEN ERROR 'Health Nbr is already assigned to another patient'
      end
  end

procedure edit pat-ohip-mmyy
begin
  if pat-ohip-mmyy <> ' ' and pat-prov-cd = 'ON'
    then begin
      if pat-ohip-mmyy[1:1] < 'A'
        then begin
;         LET PAT-OHIP-NBR = NCONVERT(PAT-OHIP-MMYY[1:8])
          let x-pat-health-nbr = floor(nconvert(pat-ohip-mmyy[1:8]) / 10) * 1000
          do internal mod_10_check_digit
          if w-pat-health-nbr <> (mod(nconvert(pat-ohip-mmyy[1:8]), 10))
            then error "Invalid Ohip Nbr"
          if pat-birth-date <> 0
           then begin
             if pat-birth-date-mm <> nconvert(pat-ohip-mmyy[9:2])
               then error "Birth Month does not match Ohip Month"
             if pat-birth-date-yy <> nconvert(pat-ohip-mmyy[11:2])
               then error "Birth Year does not match Ohip Year"
             end
          end
      else begin
  	 if pat-health-nbr <> 0
    	  then error "Bill Direct is not allowed with Health Nbr"
         if pat-surname <> ' '
           then begin
             if pat-ohip-mmyy[1:3] <> pat-surname-first3
               then error "First 3 letters of Direct Id does not match Surname"
             end
         if pat-birth-date <> 0
           then begin
             if pat-birth-date <> nconvert(pat-ohip-mmyy[4:6])
               then error "Birth date does not match Direct Date"
             end
      end
    end
;    GET F010-PAT-KEYS OPTIONAL VIAINDEX PAT-OHIP-MMYY   &
;       USING PAT-OHIP-MMYY
;    IF ACCESSOK
;      THEN ERROR 'Nbr is already assigned to another patient'
  if pat-prov-cd <> 'ON'
    then begin
      let w-prov-length = size(truncate(pat-ohip-mmyy))
        if w-prov-length <> 11 and (pat-prov-cd = 'AB' or                		 pat-prov-cd = 'NS')
          then error "REGISTRATION NUMBER MUST HAVE 11 DIGITS"
;        IF PAT-PROV-CD = 'NS' AND W-PROV-LENGTH <> 11
;          THEN ERROR "NOVA SCOTIA'S NUMBER MUST HAVE 11 DIGITS"
;       IF PAT-PROV-CD = 'BC'	&
;          AND (W-PROV-LENGTH <> 11 AND W-PROV-LENGTH <> 10)
;         THEN ERROR "B.C.'S NUMBER MUST HAVE 10 OR 11 DIGITS"
        if pat-prov-cd = 'BC' and w-prov-length <> 10   &
           and pat-ohip-mmyy [1:1] ne '9'
          then error "B.C.'S NUMBER MUST HAVE 10 DIGITS AND START WITH NUMERIC 9"
        if pat-prov-cd = 'MB' and w-prov-length <> 6
          then error "MANITOBA'S NUMBER MUST HAVE 6 DIGITS"
        if pat-prov-cd = 'NF' and w-prov-length <> 12
          then error "NEWFOUNDLAND'S NUMBER MUST HAVE 12 DIGITS"
        if w-prov-length <> 9 and 			&
;	  (PAT-PROV-CD = 'NB' OR PAT-PROV-CD  = 'PE' OR PAT-PROV-CD = 'YT')
	  (pat-prov-cd = 'NB' or pat-prov-cd  = 'PE' or pat-prov-cd = 'YT' or pat-prov-cd = 'SK')
          then error "REGISTRATION NUMBER MUST HAVE 9 DIGITS"
;        IF PAT-PROV-CD = 'PE' AND W-PROV-LENGTH <> 9
;          THEN ERROR "PRINCE EDWARD ISLAND'S NUMBER MUST HAVE 9 DIGITS"
;        IF PAT-PROV-CD = 'YT' AND W-PROV-LENGTH <> 9
;          THEN ERROR "YUKON'S NUMBER MUST HAVE 9 DIGITS"
;       IF W-PROV-LENGTH <> 8 AND (PAT-PROV-CD = 'NT' OR PAT-PROV-CD = 'SK')
        if pat-prov-cd = 'NT' and w-prov-length <> 8
          then error "N.T. NUMBER MUST HAVE 8 DIGITS"
;        IF PAT-PROV-CD = 'SK' AND W-PROV-LENGTH <> 8
;          THEN ERROR "SASKATCHEWAN'S NUMBER MUST HAVE 8 DIGITS"
      end
  end

procedure edit pat-chart-nbr
begin
  if pat-chart-nbr <> ' '
  then begin
    if pat-chart-nbr[1:1] <> 'M'
    then error "Chart Nbr must start with 'M'"
    if pat-birth-date <> 0 and pat-prov-cd = 'ON'
    then begin
      if pat-birth-date-yy <> nconvert(pat-chart-nbr[2:2])
        then warning "Birth Year does not match Chart Year"
      if pat-birth-date-mm <> nconvert(pat-chart-nbr[4:2])
        then warning "Birth Month does not match Chart Month"
      end
    end
;  GET F010-PAT-KEYS OPTIONAL VIAINDEX PAT-CHART-NBR USING PAT-CHART-NBR
;  IF ACCESSOK
;    THEN ERROR 'Nbr is already assigned to another patient'
  end


procedure edit pat-surname
begin
  if pat-ohip-mmyy <> ' '
    then begin
      if pat-direct-alpha[1:1] >= 'A' and pat-direct-alpha[1:1] <= 'Z'
        then begin

; For non 'NT' patients only. When a patient is entered with direct-ID
; check to make sure first three letters of direct-ID and Surname are
; the same. We do not check for the 'NT' patient because the
; registration number is alphanumeric.

          if newrecord and pat-direct-alpha <> pat-surname[1:3]	&
             and pat-prov-cd <> 'NT'
            then error "Surname must start with the same first 3 letters of Direct Id"
          if changemode or correctmode
            then begin
              let pat-direct-alpha = pat-surname[1:3]
              let pat-acronym = pat-surname[1:6] + pat-given-name[1:3]
	      display pat-ohip-mmyy
	      display pat-acronym
;
; Added by M.C. to check the changed BILL DIRECT ID does not exist
;
	      get f010-pat-keys optional viaindex pat-ohip-mmyy using pat-ohip-mmyy
	      if accessok
	 	then error 'The changed DIRECT Id is already assigned to another patient'
              end
            end
      end
    end

procedure process pat-surname
begin
  let pat-acronym = pat-surname[1:6] + pat-given-name[1:3]
  display pat-acronym
  end

procedure process pat-given-name
begin
  let pat-acronym = pat-surname[1:6] + pat-given-name[1:3]
  display pat-acronym
  end

procedure edit pat-birth-date
begin
  if newrecord and pat-prov-cd = 'ON' and pat-ohip-mmyy <> ' '
    then begin
      if pat-direct-alpha[1:1] < 'A'
        then begin
          if pat-yy <> floor(pat-birth-date / 10000)
            then error "Birth Year does not match Ohip Year"
          if pat-mm <> floor(mod(pat-birth-date,10000) / 100)
            then error "Birth Month does not match Ohip Month"
          end
        else begin
          if pat-direct-bdate <> pat-birth-date
            then error "Birth Date does not match Direct Date"
          end
      end

  if newrecord and pat-prov-cd = 'ON' and pat-chart-nbr <> ' '
    then begin
      if pat-chart-yy <> floor(pat-birth-date / 10000)	&
      or pat-chart-mm <> floor(mod(pat-birth-date,10000) / 100)
        then error "Birth Date does not match Chart Date"
      end

  if (changemode or correctmode) and pat-prov-cd = 'ON' and pat-chart-nbr <> ' '
    then begin
      let pat-chart-yy = floor(pat-birth-date / 10000)
      let pat-chart-mm = floor(mod(pat-birth-date,10000) / 100)
      display pat-chart-nbr
;
; Added by M.C. to check the changed chart nbr does not exist
;
      get f010-pat-keys optional viaindex pat-chart-nbr using pat-chart-nbr
      if accessok
        then error 'The changed CHART Nbr is already assigned to another patient'
      end
  if (changemode or correctmode) and pat-prov-cd = 'ON' and pat-ohip-mmyy <> ' '
    then begin
      if pat-direct-alpha[1:1] < 'A'
        then begin
          let pat-mm = floor(mod(pat-birth-date,10000) / 100)
          let pat-yy = floor(pat-birth-date / 10000)
	  display pat-ohip-mmyy
          end
      else begin
          let pat-direct-bdate = pat-birth-date
	  display pat-ohip-mmyy
          end
;
; Added by M.C. to check the changed PAT-OHIP-MMYY does not exist
;
      get f010-pat-keys optional viaindex pat-ohip-mmyy using pat-ohip-mmyy
      if accessok
        then error 'The changed OHIP/DIRECT Nbr is already assigned to another patient'
      end
  end

procedure process subscr-addr3
begin
  if w-subscr-addr3 <> ' '
    then let subscr-addr3 = w-subscr-addr3
  end

procedure input subscr-msg-nbr
begin
  if fieldtext eq "."
  then begin
    let w-msg-nbr = " "
    run screen $pb_obj/sy030 passing w-msg-nbr mode f
    let fieldtext = w-msg-nbr
  end
end

procedure edit subscr-msg-nbr
begin
  if subscr-msg-nbr <> '00'
    then begin
      get f094-msg-mstr optional
      if not accessok
        then error "*E* Message Number not defined. Use . to search."
      end
  end

procedure process subscr-msg-nbr
begin
  if subscr-msg-nbr = '00'
    then begin
      let subscr-date-msg-nbr-effective-to = 0
      display  subscr-date-msg-nbr-effective-to
      end
  end

procedure input subscr-date-msg-nbr-effective-to
begin
  if (changemode) and subscr-msg-nbr <> '00' 		&
    and 0 = size(fieldtext) and subscr-date-msg-nbr-effective-to = 0
    then error "Msg Effective Date must be entered"
  end

procedure edit subscr-date-msg-nbr-effective-to
begin
  if subscr-msg-nbr <> '00'
    then begin
      if subscr-date-msg-nbr-effective-to < sysdate
        then error "Effective Date must be greater than System Date"
      end
  end

procedure designer oclm help "Enter Password to override Outstanding Claim"
begin
  accept w-password
  if w-password = 'GCN'
    then begin
      accept pat-nbr-outstanding-claims
      end
   end

procedure path
  begin
	request pat-acronym of f010-pat-mstr

	if promptok
	then
	  begin

	  if pat-acronym = "."
	  then
	     begin
		let w-ch16 = " "
		run screen $pb_obj/m010_acr mode f passing w-ch16

		if w-ch16 gt " "
		then let path = 5
	     end
	  else let path = 1
	  end

	if path = 0
   	  then begin
 		request pat-health-nbr of f010-pat-mstr
		if promptok
			then let path = 2
	  end

	if path = 0
  	  then begin
		request pat-ohip-mmyy of f010-pat-mstr
		if promptok
			then let path = 3
	   end

	if path = 0
  	  then begin
		request pat-chart-nbr of f010-pat-mstr
		if promptok
			then let path = 4
	  end

	if path = 0
	  then error = "Key Required."
end

procedure preupdate
begin
  if newrecord
    then begin
      if pat-health-nbr = 0 and pat-ohip-mmyy = ' ' &
	  and pat-chart-nbr = ' '
        then error "One of Health Nbr, Ohip Nbr, Direct Id or Chart Nbr must be entered"
      get constants-mstr-rec-5
      for const-invisible-key
        begin
          if const-con-nbr = nconvert(portid[4:2])
            then begin
              let pat-con-nbr = const-con-nbr
              let pat-i-nbr = const-nx-avail-pat
              display key-pat-mstr
              let const-nx-avail-pat = const-nx-avail-pat + 1
              end
          end
      put constants-mstr-rec-5
      end

  if alteredrecord
    then let pat-date-last-maint = sysdate

  if deletedrecord and pat-total-nbr-claims > 0
    then error "PATIENT HAS ACTIVE CLAIMS - CANNOT BE DELETED"

  end

build
go

  
