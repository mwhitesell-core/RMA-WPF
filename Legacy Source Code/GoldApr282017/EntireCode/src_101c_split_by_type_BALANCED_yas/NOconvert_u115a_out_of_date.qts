;#> program-id.     u115a.qts
;
;       ((C)) Dyad Technologies
;
;    purpose: sub-process within "earnings generation" process.
;             calculate required 'tot'al / 'ytd' transactions as of current eP
;
;    MODIFICATION HISTORY
;        DATE    SAF #  WHO      DESCRIPTION
;     92/jan/01  ____   B.E.     - original
;     92/may/01  ____   B.E.     - Added YTDGUC logic
;     92/may/11  ____   B.E.     - YTDGUC logic changed from 1C to 1B (YTDGUC)
;     92/aug/11  ____   b.e.     - moved ytd logic into 2nd request
;     92/sep/14  ----   b.e.     - comment out output of YTDGUx transaction
;                                  since GTYPEx is now calculated as ytd not
;                                  current ep.  If GTYPEx changed re-activatE
;                                  the TYDGUx code.
;     92/oct/26  ----   B.E.     - Updated F020 with YTDINC value
;     92/nov/10         B.E.     - updated F020 within this run with OUTPUT stmt
;                                  rather than using U115 SUBFILE.
;     93/apr/10         B.E.     - YTDCEA/CEX use values in DOCTOR-MSTR rather
;                                  than calculated ones.
;     93/may/06         B.E.     - Added SUBFILE F119
;     93/may/11         B.E.     - Added ACCESS of F119-DOCTOR-YTD to preset
;     93/may/18         B.E.     - INTEGER*4 for zoned*8, F119/F119 SUBFILE changes
;                                  YTD values
;     93/may/27         B.E.     - *F119 exclude records added to F119
;                                - add/subtract F110 "M"anual type recs to 
;				   F020's YTDEAR (ytd earnings)
;                                - changed YTDxxx to use = not < current-ep-nbr
;                       ?????? WITH ABOVE = VS < CHANGE IS THIS CODE NOW NOT REQUIRED ????????????????
;     93/JUN/01         B.E.     - removed ADD of recs to F119-DOCTOR-YTD, all records
;                                 now added to *F119 and then U122 adds them to F119-YTD
;     93/JUN/22         B.E.     - added Part timer Expense logic
;     93/AUG/09         B.E.     - GST/AMT EXPENSE now calculated by
;                                  separating these two amounts from the
;                                  the amount of the difference between
;                                  GROSS and NET amounts.
;     93/SEP/14         B.E.     - added RMA+GST and DEPT MISC/REG Expense Logic
;                                  and rounding of result
;     93/SEP/20         B.E.     - added separate expenses for RMA MISC/REG.
;                                  now using RMAEXR(RMA  Regular expense),
;                                            RMAEXM(RMA  Misc.   expense),
;                                            DEPEXR(DEPT Regular expense),
;                                            DEPEXM(DEPT Misc.   expense)
;                                  OUTPUT RMA and DEPT expense only if > 0
;     93/SEP/24         B.E.     - added DOCTOR'S CEIEXP to TOTEXP amount
;     93/SEP/28         B.E.     - changed update of *F119 from GROSS to NET values
;     93/OCT/02         B.E.     - OUTPUT TOTxxx records to *F119 only if > 0
;     93/OCT/05         B.E.     - RMA-EXPENSE calc. as diff between GROSS and NET
;                                  minus DEPT-EXPENSE even if doctor's RMA
;                                  EXPENSE PERCENTAGES are zero.
;     93/OCT/26         B.E.     - changed IF > 0  to IF <> 0 on all OUTPUT stmnts
;     93/OCT/30         B.E.     - AMT-INCOME-MINUS-EXPENSES-G now allowed  to go
;                                  negative (otherwise negative income
;                                  wasn't reported correctly)
;     93/NOV/26         B.E.     - Reversed GROSS/NET fields on CEIEXP output to *F119
;     93/DEC/03         B.E.     - for CEIEXP used AMT-NET not 0 in calc.
;     93/DEC/24         B.E.     - put YTDEAR into *F119 for update into F119-DOCTOR-YTD
;
;     94/MAR/07         M.C.     - ADD THE CONDITIONAL COMPILE FOR 'INCEXP'
;                                  LOGIC
;     94/MAR/16         M.C.     - INCLUDE COMP-TYPE 'P' IN THE SUBFILE,
;                                - CHANGE THE FORMULA FOR CALCULATING
;                                  DEPT AND RMA EXPENSE
;     95/MAY/02		M.C.	 - ADD THE BACKHOLD AS PART OF THE
;				   EXPENSE
;     95/MAY/08         M.C.     - COMMENT OUT THE SUBFILE DEBUGU115A,
;				   MESSAGE 'VIRTUAL MEMORY HAS EXCEEDED'
;				   OCCURRED WHEN EXECUTING PROGRAM EVEN
;				   THE STACKSIZE HAS INCREASED FROM 1500
;				   TO 10000. NOTE:  KEEP IN MIND THAT
;				   SIMILIAR PROBLEM MAY OCCUR IF THERE
;				   ARE MORE ITEMS, SUBFILES OR RECORDS
;				   TO BE ADDED IN THE REQUESTS
;     95/MAY/09		M.C.	 - CALCULATE THE RMA EXPENSE BY THE
;				   DOCTOR RMA EXPENSE PERCENTAGE RATHER
;				   THAN THE REMAINING VALUE BETWEEN
;				   GROSS - NET - DEPT
;     95/JUL/05         M.C.     - IF HOLDBACK < 10 CENTS, ADD TO RMA
;				   EXPENSE IF RMA-EXPENSE IS NON-ZERO;
;				   OTHERWISE, ADD TO DEPT EXPENSE
;     95/JUL/14 	M.C.	 - DUE TO VIRTUAL MEMORY HAS EXCEEDED
;				   SPLIT THE LAST REQUEST INTO A NEW
;				   PROGRAM(U115B.QTS).  IF CHANGES ARE
;				   REQUIRED IN THE LAST REQUEST, ALSO
;				   MAKE THE SAME CHANGE IN U115B.QTS
;     95/SEP/15		M.C.	 - INCLUDE 'E'XPENSE RECORDS AS PART OF
;				   FINAL-ALL-EXPENSES
;     95/NOV/07		M.C.	 - PDR 634 - INCLUDE NEW CONDITION FOR
;				   TOT-REVHBK DEFINITION
;     95/NOV/22  	M.C.	 - OPTIMIZE THE PROGRAM BY DELETING ALL
;				   THE UNUSED TEMP & DEFINE ITEMS
;     96/APR/19		M.C.	 - INCLUDE 'REVCLA' IN TOT-REVHBK
;   1999/Feb/18         S.B.     - Checked for Y2K.
;   1999/Jun/07		S.B.	 - Altered the call to gst.use to call 
;				   from $use instead of src.
; 00/nov/23.B.E.	- HOLDBK calculation has some rounding problems whereby
;			  hold backs in the amount of a few cents occur. The
;			  original logic ignored values less than 10 cents.
;			  Changed to ignore anything less than $1.00
; 00/mar/01 B.E.	- added debug subfiles and cosmetic alignment
;			  of calculations
; 03/jan/21 B.E.	- added doc-nbr to debug file debugu115a_at_doc_nbr
; 03/dec/16 A.A.	- alpha doctor nbr
; 04/jan/28 b.e.	- calculation of RMAEXR/RMAEXM which are based upon
;			tot-rma-expense-only-reg/misc created only if calc is
;			positive (doesn't fix all of problem but at least if
;			total amount for month is negative we don't create
;			negative charge)
; 04/mar/01 b.e.	- added 'O'ther 'I'ncome processing in addition to
;			  current logic that handles 'R'egular and 'M'isc
;			  types of Income.
; 04/mac/25 b .e.	- changed sequence of factor divide by 100000 to try
;			  to avoid rounding errors (approx 5cents on 10,500)
;


cancel clear
set stacksize 10000
run u115

set default
set process 50000

global temp ytdear-group   char*1
global temp ytdear-seq-rpt zoned*2 unsigned

global temp rmaexr-group   char*1
global temp rmaexr-seq-rpt zoned*2 unsigned

global temp rmaexm-group   char*1
global temp rmaexm-seq-rpt zoned*2 unsigned

global temp incexp-group   char*1
global temp incexp-seq-rpt zoned*2 unsigned

global temp totinc-group   char*1
global temp totinc-seq-rpt zoned*2 unsigned

global temp totexp-group   char*1
global temp totexp-seq-rpt zoned*2 unsigned

global temp depexr-group   char*1
global temp depexr-seq-rpt zoned*2 unsigned

global temp depexm-group   char*1
global temp depexm-seq-rpt zoned*2 unsigned

global temp gst-group   char*1
global temp gst-seq-rpt zoned*2 unsigned

global temp holdback-group   char*1
global temp holdback-seq-rpt zoned*2 unsigned

;-------------------------------------------------------------------------------

;
; DETERMINE THE 'REPORTING-SEQ' AND 'COMP CODE GROUP'
; FOR THE TRANSACTIONS BEING CREATED IN THIS RUN

request u115_a_get_ytdear                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDEAR"
item ytdear-group   = comp-code-group
item ytdear-seq-rpt = reporting-seq

request u115_a_get_rmaexr                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "RMAEXR"
item rmaexr-group   = comp-code-group
item rmaexr-seq-rpt = reporting-seq

request u115_a_get_rmaexm                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "RMAEXM"
item rmaexm-group   = comp-code-group
item rmaexm-seq-rpt = reporting-seq

request u115_a_get_incexp                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "INCEXP"
item incexp-seq-rpt  = reporting-seq
item incexp-group    = comp-code-group

request u115_a_get_totinc                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "TOTINC"
item totinc-seq-rpt  = reporting-seq
item totinc-group    = comp-code-group

request u115_a_get_totexp                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "TOTEXP"
item totexp-seq-rpt  = reporting-seq
item totexp-group    = comp-code-group

request u115_a_get_depexr                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "DEPEXR"
item depexr-group   = comp-code-group
item depexr-seq-rpt = reporting-seq

request u115_a_get_depexm                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "DEPEXM"
item depexm-group   = comp-code-group
item depexm-seq-rpt = reporting-seq

request u115_a_get_gst                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "GST"
item gst-group   = comp-code-group
item gst-seq-rpt = reporting-seq

request u115_a_get_holdback                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "HOLDBK"
item holdback-group   = comp-code-group
item holdback-seq-rpt = reporting-seq

;-------------------------------------------------------------------------------

request u115_run_0                              &
                on edit        errors report    &
                on calculation errors report

access constants-mstr-rec-6                                           &
        link current-ep-nbr viaindex compensation-key2                &
        to   ep-nbr  of f110-compensation                             &
        link doc-nbr of f110-compensation                             &
        to   doc-nbr of f020-doctor-mstr   opt                        &
        link comp-code of f110-compensation                           &
        to   comp-code of f190-comp-codes

choose const-rec-nbr 6
sorted on doc-nbr   of f110-compensation                        &
       on ep-nbr    of f110-compensation                        &
       on comp-code of f110-compensation  ; CHANGED TO SORTED WHEN CHOOSE ADDED !!!!


;use $pb_src/gst.use
use $use/gst.use
use $src/u115_common.qts 

; if new record, initial YTD record in F119.  (required only for
; "I"ncome, AND "E"xpense records - .ie calc rec types like CEICEA are
;  needed AND the "D"eduction records are handled in the tax/eft processing)

define x-rec-type  char*1 = "A"


def x-not-needed integer*8 signed size 4 = 0


; (GROSS VALUES ARE USUALLY PUT INTO F119 HOWEVER FOR CEIEXP THE NET VALUE IS REQUIRED)

def x-amt-net int*8 signed size 4                                      &
        = amt-gross of f110-compensation                               &
                 if comp-code of f110-compensation = "CEIEXP"          &
     else amt-net   of f110-compensation
def x-amt-gross int*8 signed size 4                                    &
        = amt-net   of f110-compensation                               &
                 if comp-code of f110-compensation = "CEIEXP"          &
     else amt-gross of f110-compensation

subfile f119 keep                                                     &
  if    (   comp-type of f190-comp-codes = "I"                        &
         or comp-type of f190-comp-codes = "E"                        &
         or comp-type of f190-comp-codes = "A"                        &
         or comp-type of f190-comp-codes = "M"                        &
         or comp-type of f190-comp-codes = "P" )                      &
      include                                                        &
         doc-nbr   of f110-compensation         , &
         comp-code of f110-compensation         , &
         reporting-seq   of f190-comp-codes     , &
         comp-code-group of f190-comp-codes     , &
         x-rec-type                             , &
         x-amt-net                              , &
         x-amt-gross

def x-comp-code char*6 = "RMAEXR"
subfile f119 alias f119-rmaexr   append     at doc-nbr          &
;   if tot-rma-expense-only-reg <> 0    include                  &
   if tot-rma-expense-only-reg  > 0    include                  &
         doc-nbr of f110-compensation   , &
         x-comp-code                    , &
         rmaexr-seq-rpt                 , &
         rmaexr-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-rma-expense-only-reg

def x-comp-code-rmaexm char*6 = "RMAEXM"
subfile f119 alias f119-rmaexm   append     at doc-nbr      &
;  if tot-rma-expense-only-misc <> 0    include              &
  if tot-rma-expense-only-misc  > 0    include              &
         doc-nbr of f110-compensation   , &
         x-comp-code-rmaexm             , &
         rmaexm-seq-rpt                 , &
         rmaexm-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-rma-expense-only-misc

def x-comp-code-gst char*6 = "GST"
def tot-gst-only integer*8 signed size 4        &
    =  tot-gst-only-reg                         &
     + tot-gst-only-misc
subfile f119 alias f119-gst      append     at doc-nbr     &
  if tot-gst-only  <> 0  include                                  &
         doc-nbr of f110-compensation   , &
         x-comp-code-gst                , &
         gst-seq-rpt                    , &
         gst-group                      , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-gst-only

def x-comp-code-holdback char*6 = "HOLDBK"
def tot-holdback-only integer*8 signed size 4        &
    =  tot-holdback-only-reg                         &
     + tot-holdback-only-misc
subfile f119 alias f119-holdback      append     at doc-nbr     &
  if tot-holdback-only  <> 0  include                                  &
         doc-nbr of f110-compensation   , &
         x-comp-code-holdback                , &
         holdback-seq-rpt                    , &
         holdback-group                      , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-holdback-only

def x-comp-code-totinc char*6 = "TOTINC"
def tot-income-gross   integer*8 signed size 4  &
    =  tot-income-gross-reg                     &
     + tot-income-gross-misc			&
     + tot-income-gross-other
def tot-income-net     integer*8 signed size 4  &
    =  tot-income-net-reg                       &
     + tot-income-net-misc			&
     + tot-income-net-other
subfile f119 alias f119-totinc   append     at doc-nbr      &
  if tot-income-net <> 0           include                          &
         doc-nbr of f110-compensation   , &
         x-comp-code-totinc             , &
         totinc-seq-rpt                 , &
         totinc-group                   , &
         x-rec-type                     , &
         tot-income-net                 , &
         tot-income-gross

def x-comp-code-depexr char*6 = "DEPEXR"
subfile f119 alias f119-depexr   append     at doc-nbr    &
   if tot-dept-expense-reg  <> 0           &
      include                             &
         doc-nbr of f110-compensation   , &
         x-comp-code-depexr             , &
         depexr-seq-rpt                 , &
         depexr-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-dept-expense-reg
def x-comp-code-depexm char*6 = "DEPEXM"
subfile f119 alias f119-depexm   append     at doc-nbr    &
   if tot-dept-expense-misc <> 0           &
      include                             &
         doc-nbr of f110-compensation   , &
         x-comp-code-depexm             , &
         depexm-seq-rpt                 , &
         depexm-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         tot-dept-expense-misc

; ('Total Expense" = all "E"xpense trans found in file PLUS the
;  expense transactions calculated by the pgm IE. 'RMA EXPENSE', 'GST'
;  and 'DEPARTMENT EXPENSE' and 'HOLDBACK')
temp final-all-expenses integer*8 size 4
item final-all-expenses                                    &
     =  tot-dept-expense-reg                               &
      + tot-dept-expense-misc                              &
      + tot-rma-expense-only-reg                           &
      + tot-rma-expense-only-misc                          &
      + tot-gst-only                                       &
      + tot-holdback-only                                  &
      + tot-revhbk					   &
      + doc-ceicex        ; 93/SEP/24

def x-comp-code-totexp char*6 = "TOTEXP"
subfile f119 alias f119-totexp   append     at doc-nbr         &
   if final-all-expenses  <> 0         include                  &
         doc-nbr of f110-compensation   , &
         x-comp-code-totexp             , &
         totexp-seq-rpt                 , &
         totexp-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         final-all-expenses

temp amt-income-minus-expenses-g integer*8 signed size 4
item amt-income-minus-expenses-g                        &
       =  tot-income-gross                              &
        - final-all-expenses

def x-comp-code-incexp char*6 = "INCEXP"
subfile f119 alias u115-incexp   append     at doc-nbr         &
@if dg and hsc
   if amt-income-minus-expenses-g <> 0    &
@endif
     include                              &
         doc-nbr of f110-compensation   , &
         x-comp-code-incexp             , &
         incexp-seq-rpt                 , &
         incexp-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         amt-income-minus-expenses-g

temp doc-ytdear-plus-amt-manpay  integer*8 signed size 4
item doc-ytdear-plus-amt-manpay                                 &
 =   doc-ytdear of f020-doctor-mstr                             &
   + amt-manpay
def x-comp-code-ytdear char*6 = "YTDEAR"
subfile f119 alias f119-ytdear   append     at doc-nbr          &
   include                                                      &
         doc-nbr of f110-compensation   , &
         x-comp-code-ytdear             , &
         ytdear-seq-rpt                 , &
         ytdear-group                   , &
         x-rec-type                     , &
         x-not-needed                   , &
         doc-ytdear-plus-amt-manpay

use $src/u115_debug.qts

build $pb_obj/u115a
