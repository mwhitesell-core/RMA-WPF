; DOC: R139_CSV.QZS
; DOC: INCEXP minus TOTDED <> PAYEFT for pay code 2 only
; DOC: SORT BY COMPANY/DEPT
; DOC: RUN FOR: Ross  
;
;PROGRAM PURPOSE : INCEXP minus TOTDED <> PAYEFT for pay code 2 only
;
;DATE           WHO       DESCRIPTION
;2015/Aug/12	MC	  ORIGINAL - this program will be run in $cmd/teb3; thus ep nbr has changed (+1)  
;				    - this is the second pass
;
can clear
set rep nolimit
set rep device disc name r139_csv
set page length 0  width 132
set nohead

access *r139_csv  

sort on dept-company on doc-dept on doc-nbr

def incexp-totded = amt-incexp - amt-totded

sel if incexp-totded <> amt-payeft


def x-delimiter char*1 = "~"

def x-period char*1 = "."


def x-company	   char*1  = ascii(dept-company) 

def x-dept         char*4  = '"' + ascii(doc-dept,2) + '"'

def x-doc-nbr      char*5  = '"' + doc-nbr     + '"'

def x-ep-nbr       char*6  = ascii(ep-nbr)       

;---------------------------------------------------------------------------

def x-incexp-sign char*1 = "-"           	if amt-incexp < 0       &
                else " "
def x-incexp-dollars = abs(amt-incexp) / 100 	if amt-incexp <> 0      &
                else  0
def x-incexp-cents   = mod(abs(amt-incexp),100) if amt-incexp <> 0      &
                else  0

def x-totded-sign char*1 = "-"           	if amt-totded < 0       &
                else " "
def x-totded-dollars = abs(amt-totded) / 100 	if amt-totded <> 0      &
                else  0
def x-totded-cents   = mod(abs(amt-totded),100) if amt-totded <> 0      &
                else  0

def x-incexp-totded-sign char*1 = "-"           	  if incexp-totded < 0       &
                else " "
def x-incexp-totded-dollars = abs(incexp-totded) / 100 	  if incexp-totded <> 0      &
                else  0
def x-incexp-totded-cents   = mod(abs(incexp-totded),100) if incexp-totded <> 0      &
                else  0

def x-paypot-sign char*1 = "-"           	if amt-paypot < 0       &
                else " "
def x-paypot-dollars = abs(amt-paypot) / 100 	if amt-paypot <> 0      &
                else  0
def x-paypot-cents   = mod(abs(amt-paypot),100) if amt-paypot <> 0      &
                else  0

def x-payeft-sign char*1 = "-"           	if amt-payeft < 0       &
                else " "
def x-payeft-dollars = abs(amt-payeft) / 100 	if amt-payeft <> 0      &
                else  0
def x-payeft-cents   = mod(abs(amt-payeft),100) if amt-payeft <> 0      &
                else  0

def x-advout-sign char*1 = "-"           	if amt-advout < 0       &
                else " "
def x-advout-dollars = abs(amt-advout) / 100 	if amt-advout <> 0      &
                else  0
def x-advout-cents   = mod(abs(amt-advout),100) if amt-advout <> 0      &
                else  0

;---------------------------------------------------------------------------

def x-incexp-alpha char*10 =  pack(trunc(lj(x-incexp-sign +       		&
                                            ascii(x-incexp-dollars) +     	&
                                            x-period +                          &
                                            ascii(x-incexp-cents,2))))

def x-totded-alpha char*10 =  pack(trunc(lj(x-totded-sign +       		&
                                            ascii(x-totded-dollars) +     	&
                                            x-period +                          &
                                            ascii(x-totded-cents,2))))

def x-incexp-totded-alpha char*10 =  pack(trunc(lj(x-incexp-totded-sign +       &
                                            ascii(x-incexp-totded-dollars) +    &
                                            x-period +                          &
                                            ascii(x-incexp-totded-cents,2))))

def x-paypot-alpha char*10 =  pack(trunc(lj(x-paypot-sign +       		&
                                            ascii(x-paypot-dollars) +     	&
                                            x-period +                          &
                                            ascii(x-paypot-cents,2))))

def x-payeft-alpha char*10 =  pack(trunc(lj(x-payeft-sign +       		&
                                            ascii(x-payeft-dollars) +     	&
                                            x-period +                          &
                                            ascii(x-payeft-cents,2))))

def x-advout-alpha char*10 =  pack(trunc(lj(x-advout-sign +       		&
                                            ascii(x-advout-dollars) +     	&
                                            x-period +                          &
                                            ascii(x-advout-cents,2))))


def x-line char*132 =                                   &
        lj(pack(                                        &
                x-company       +                       &
                x-delimiter  +                          &
                x-dept          +                       &
                x-delimiter  +                          &
                x-doc-nbr       +                       &
                x-delimiter  +                          &
                doc-name        +                       &
                x-delimiter  +                          &
                x-incexp-alpha    +                    &
                x-delimiter  +                          &
                x-totded-alpha    +                    &
                x-delimiter  +                          &
                x-incexp-totded-alpha +               &
                x-delimiter  +                          &
                x-payeft-alpha    +                    &
                x-delimiter  +                          &
                x-paypot-alpha    +                    &
                x-delimiter  +                          &
                x-advout-alpha    +                    &
                x-delimiter  +                          &
                x-ep-nbr                                &
                ) )


initial heading							&
        tab  1  'COMPANY'                                       &
	tab  8  x-delimiter					&
        tab  9  'DEPT'                               		&
	tab 13  x-delimiter					&
        tab 14  'DOC#'                               		&
	tab 18  x-delimiter					&
        tab 19  'DOC NAME'                           		&
	tab 27  x-delimiter					&
        tab 28  'INCEXP AMT'                                    &
	tab 38  x-delimiter					&
        tab 39  'TOTDED AMT'                                    &
	tab 49  x-delimiter					&
        tab 50  'INCEXP-TOTDED'                                 &
	tab 62  x-delimiter					&
        tab 63  'PAYEFT AMT'                                    &
	tab 73  x-delimiter					&
        tab 74  'PAYPOT AMT'                                    &
	tab 84  x-delimiter					&
        tab 85  'ADVOUT AMT'                                    &
	tab 95  x-delimiter					&
	tab 96  'EP NBR'  					


report tab 01 x-line
 
;------------------------------
  

build $pb_obj/r139_csv   

