;#> PROGRAM-ID.     u131a.qts
;
;       ((C)) Dyad Technologies
;
;    PURPOSE: SUB-PROCESS WITHIN "EARNINGS GENERATION" PROCESS.
;             Creates the 'adjustment for conversion' of AFP inscope
;	      billings: Regular inscope billings are paid under comp code
;	      "AFPIN". This program creates an automatic 10% charge against
;	      that 'AFPIN' amount in a 'AFPADJ' transaction.

;    MODIFICATION HISTORY
;        DATE    SAF #  WHO      DESCRIPTION
; 2004/02/25            b.e.    - original
;

cancel clear
set stacksize 500
run u131a

set default
set process nolimit

global temp w-current-ep-nbr        numeric
global temp w-current-ep-nbr-minus1 numeric

global temp biladj-seq    numeric
global temp biladj-type   char*1 
global temp biladj-factor numeric 

;-------------------------------------------------------------------------------
; OBTAIN THE CURRENT EP NUMBER AND PASS TO SUBSEQUENT REQUESTS
;
request u131a_const_mstr_get_ep_nbr              &
                on edit        errors report    &
                on calculation errors report
access constants-mstr-rec-6
choose const-rec-nbr 6

item w-current-ep-nbr        final  current-ep-nbr
item w-current-ep-nbr-minus1 final  current-ep-nbr - 1
;


;-------------------------------------------------------------------------------
; Obtain afp billing adjustment comp code details
request u114_get_biladj                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "AFPADJ"
item biladj-seq    = process-seq
item biladj-type   = comp-type
item biladj-factor = factor

;-------------------------------------------------------------------------------
;
request u131a_process                           &
                on edit        errors report    &
                on calculation errors report

access constants-mstr-rec-6                                           &
        link current-ep-nbr viaindex compensation-key2                &
        to   ep-nbr  of f110-compensation                             &
	link doc-nbr  of f110-compensation			      &
	to doc-nbr of f020-doctor-mstr

choose const-rec-nbr 6

select if     comp-code of f110-compensation          = "AFPIN"	&
	  and doc-afp-paym-group of f020-doctor-mstr <> " "

define  x-amt-gross							       &
    = 0 - round((amt-gross of f110-compensation * biladj-factor)/10000,0,near) &
	if record f110-compensation exists				       &
else  0

define  x-amt-net  							       &
    = 0 - round((amt-net   of f110-compensation * biladj-factor)/10000,0,near) &
	if record f110-compensation exists				       &
else  0

use $use/def_compensation_status.def

;----------- BILADJ ------------
output f110-compensation add alias f110-add                          
        item doc-nbr	     final  doc-nbr of f110-compensation
        item ep-nbr          final  w-current-ep-nbr
        item ep-nbr-entry    final  w-current-ep-nbr
        item comp-code       final  "AFPADJ"
        item comp-type       final  biladj-type
        item process-seq     final  biladj-seq
        item factor          final  biladj-factor
        item factor-override final  " "
        item comp-units      final  0    ; BUT COULD STORE NBR SVCS ?????!!!!
        item amt-gross       final  x-amt-gross
        item amt-net         final  x-amt-net
        item compensation-status final  compensation-status-accepted
        item last-mod-date    final  sysdate
        item last-mod-time    final  systime / 10000
        item last-mod-user-id final  "u131a    Gen'd"

build $pb_obj/u131a
  
