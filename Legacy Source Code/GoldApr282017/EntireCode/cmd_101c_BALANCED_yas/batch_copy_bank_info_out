# batch_copy_bank_info_out
# copies doctor banking info, passed from online pgm to /temp/transferarea
# from which is can be imported in from another system

#datestampe incorporates userid passed in parm#1 and current date
# parm 1 = user logon id
# parm 2 = type of info being passed (eg. "payroll")
# parm 3.. dependent upon type of info being passed

user=$1
infotype=$2 

datestamp=`date +%y%m%d_%H%M%S`_$user_$infotype
# write audit record
echo $3 > /temp/transfer_area/rmabill/$infotype.$datestamp

#echo $* >> /temp/transfer_area/rmabill/transfer.dat
# write out the first 3 parms which are required and then loop shifting
# parameters past 3 into the 3rd position until all parms have been processed
#  
echo $* >  /temp/transfer_area/rmabill/brad 
echo $1 >  /temp/transfer_area/rmabill/transfer.dat
echo $2 >> /temp/transfer_area/rmabill/transfer.dat
echo $3 >> /temp/transfer_area/rmabill/transfer.dat
echo $4 >> /temp/transfer_area/rmabill/transfer.dat
echo $5 >> /temp/transfer_area/rmabill/transfer.dat
echo $6 >> /temp/transfer_area/rmabill/transfer.dat
echo $7 >> /temp/transfer_area/rmabill/transfer.dat
echo $8 >> /temp/transfer_area/rmabill/transfer.dat
echo $9 >> /temp/transfer_area/rmabill/transfer.dat
shift
while [ "$9" ]
do 
  echo $9 >> /temp/transfer_area/rmabill/transfer.dat
  shift
done

# convert the transfer file from variable length to fixed 80 byte records
mv /temp/transfer_area/rmabill/transfer.dat \
   /temp/transfer_area/rmabill/transfer.tmp
awk -f $cmd/pad_to_80_bytes.awk < /temp/transfer_area/rmabill/transfer.tmp \
                                > /temp/transfer_area/rmabill/transfer.dat 
rm /temp/transfer_area/rmabill/transfer.tmp
