/alpha/rmabill/rmabill101/dvlp/moira
Mon Aug 26 14:50:03 EDT 2013
 + + + Sourced in /alpha/rmabill/rmabill101/dvlp/moira + + +
;Compiling program [/alpha/rmabill/rmabill101/dvlp/moira/u115a.qts]
Q T P   (7.33.E)
Copyright 1996 COGNOS INCORPORATED
Licensed PH-RUNTIME for customer: 5139390001 C.O.T.A UNIX

> ;#> program-id.     u115a.qts
> ;
> ;       ((C)) Dyad Technologies
> ;
> ;    purpose: sub-process within "earnings generation" process.
> ;             calculate required 'tot'al / 'ytd' transactions as of current EPA
> ;
> ;	This program puts transactions into *f119 that eventually get uploaded to f119-doctor-ytd. A
> ;
> ; 	IT IS CRTICAL that changes to this pgm are kept in sync with u115b.qts that CREATES THE CORRESPONDING f110-comp-code trans.
> ;
> ;    MODIFICATION HISTORY
> ;        DATE    SAF #  WHO      DESCRIPTION
> ;     92/jan/01  ____   B.E.     - original
> ;     92/may/01  ____   B.E.     - Added YTDGUC logic
> ;     92/may/11  ____   B.E.     - YTDGUC logic changed from 1C to 1B (YTDGUC)
> ;     92/aug/11  ____   b.e.     - moved ytd logic into 2nd request
> ;     92/sep/14  ----   b.e.     - comment out output of YTDGUx transaction
> ;                                  since GTYPEx is now calculated as ytd not
> ;                                  current ep.  If GTYPEx changed re-activatE
> ;                                  the TYDGUx code.
> ;     92/oct/26  ----   B.E.     - Updated F020 with YTDINC value
> ;     92/nov/10         B.E.     - updated F020 within this run with OUTPUT stmt
> ;                                  rather than using U115 SUBFILE.
> ;     93/apr/10         B.E.     - YTDCEA/CEX use values in DOCTOR-MSTR rather
> ;                                  than calculated ones.
> ;     93/may/06         B.E.     - Added SUBFILE F119
> ;     93/may/11         B.E.     - Added ACCESS of F119-DOCTOR-YTD to preset
> ;     93/may/18         B.E.     - INTEGER*4 for zoned*8, F119/F119 SUBFILE changes
> ;                                  YTD values
> ;     93/may/27         B.E.     - *F119 exclude records added to F119
> ;                                - add/subtract F110 "M"anual type recs to
> ;				   F020's YTDEAR (ytd earnings)
> ;                                - changed YTDxxx to use = not < current-ep-nbr
> ;                       ?????? WITH ABOVE = VS < CHANGE IS THIS CODE NOW NOT REQUIRED ????????????????
> ;     93/JUN/01         B.E.     - removed ADD of recs to F119-DOCTOR-YTD, all records
> ;                                 now added to *F119 and then U122 adds them to F119-YTD
> ;     93/JUN/22         B.E.     - added Part timer Expense logic
> ;     93/AUG/09         B.E.     - GST/AMT EXPENSE now calculated by
> ;                                  separating these two amounts from the
> ;                                  the amount of the difference between
> ;                                  GROSS and NET amounts.
> ;     93/SEP/14         B.E.     - added RMA+GST and DEPT MISC/REG Expense Logic
> ;                                  and rounding of result
> ;     93/SEP/20         B.E.     - added separate expenses for RMA MISC/REG.
> ;                                  now using RMAEXR(RMA  Regular expense),
> ;                                            RMAEXM(RMA  Misc.   expense),
> ;                                            DEPEXR(DEPT Regular expense),
> ;                                            DEPEXM(DEPT Misc.   expense)
> ;                                  OUTPUT RMA and DEPT expense only if > 0
> ;     93/SEP/24         B.E.     - added DOCTOR'S CEIEXP to TOTEXP amount
> ;     93/SEP/28         B.E.     - changed update of *F119 from GROSS to NET values
> ;     93/OCT/02         B.E.     - OUTPUT TOTxxx records to *F119 only if > 0
> ;     93/OCT/05         B.E.     - RMA-EXPENSE calc. as diff between GROSS and NET
> ;                                  minus DEPT-EXPENSE even if doctor's RMA
> ;                                  EXPENSE PERCENTAGES are zero.
> ;     93/OCT/26         B.E.     - changed IF > 0  to IF <> 0 on all OUTPUT stmnts
> ;     93/OCT/30         B.E.     - AMT-INCOME-MINUS-EXPENSES-G now allowed  to go
> ;                                  negative (otherwise negative income
> ;                                  wasn't reported correctly)
> ;     93/NOV/26         B.E.     - Reversed GROSS/NET fields on CEIEXP output to *F119
> ;     93/DEC/03         B.E.     - for CEIEXP used AMT-NET not 0 in calc.
> ;     93/DEC/24         B.E.     - put YTDEAR into *F119 for update into F119-DOCTOR-YTD
> ;
> ;     94/MAR/07         M.C.     - ADD THE CONDITIONAL COMPILE FOR 'INCEXP'
> ;                                  LOGIC
> ;     94/MAR/16         M.C.     - INCLUDE COMP-TYPE 'P' IN THE SUBFILE,
> ;                                - CHANGE THE FORMULA FOR CALCULATING
> ;                                  DEPT AND RMA EXPENSE
> ;     95/MAY/02		M.C.	 - ADD THE BACKHOLD AS PART OF THE
> ;				   EXPENSE
> ;     95/MAY/08         M.C.     - COMMENT OUT THE SUBFILE DEBUGU115A,
> ;				   MESSAGE 'VIRTUAL MEMORY HAS EXCEEDED'
> ;				   OCCURRED WHEN EXECUTING PROGRAM EVEN
> ;				   THE STACKSIZE HAS INCREASED FROM 1500
> ;				   TO 10000. NOTE:  KEEP IN MIND THAT
> ;				   SIMILIAR PROBLEM MAY OCCUR IF THERE
> ;				   ARE MORE ITEMS, SUBFILES OR RECORDS
> ;				   TO BE ADDED IN THE REQUESTS
> ;     95/MAY/09		M.C.	 - CALCULATE THE RMA EXPENSE BY THE
> ;				   DOCTOR RMA EXPENSE PERCENTAGE RATHER
> ;				   THAN THE REMAINING VALUE BETWEEN
> ;				   GROSS - NET - DEPT
> ;     95/JUL/05         M.C.     - IF HOLDBACK < 10 CENTS, ADD TO RMA
> ;				   EXPENSE IF RMA-EXPENSE IS NON-ZERO;
> ;				   OTHERWISE, ADD TO DEPT EXPENSE
> ;     95/JUL/14 	M.C.	 - DUE TO VIRTUAL MEMORY HAS EXCEEDED
> ;				   SPLIT THE LAST REQUEST INTO A NEW
> ;				   PROGRAM(U115B.QTS).  IF CHANGES ARE
> ;				   REQUIRED IN THE LAST REQUEST, ALSO
> ;				   MAKE THE SAME CHANGE IN U115B.QTS
> ;     95/SEP/15		M.C.	 - INCLUDE 'E'XPENSE RECORDS AS PART OF
> ;				   FINAL-ALL-EXPENSES
> ;     95/NOV/07		M.C.	 - PDR 634 - INCLUDE NEW CONDITION FOR
> ;				   TOT-REVHBK DEFINITION
> ;     95/NOV/22  	M.C.	 - OPTIMIZE THE PROGRAM BY DELETING ALL
> ;				   THE UNUSED TEMP & DEFINE ITEMS
> ;     96/APR/19		M.C.	 - INCLUDE 'REVCLA' IN TOT-REVHBK
> ;   1999/Feb/18         S.B.     - Checked for Y2K.
> ;   1999/Jun/07		S.B.	 - Altered the call to gst.use to call
> ;				   from $use instead of src.
> ; 00/nov/23.B.E.	- HOLDBK calculation has some rounding problems whereby
> ;			  hold backs in the amount of a few cents occur. The
> ;			  original logic ignored values less than 10 cents.
> ;			  Changed to ignore anything less than $1.00
> ; 00/mar/01 B.E.	- added debug subfiles and cosmetic alignment
> ;			  of calculations
> ; 03/jan/21 B.E.	- added doc-nbr to debug file debugu115a_at_doc_nbr
> ; 03/dec/16 A.A.	- alpha doctor nbr
> ; 04/jan/28 b.e.	- calculation of RMAEXR/RMAEXM which are based upon
> ;			tot-rma-expense-only-reg/misc created only if calc is
> ;			positive (doesn't fix all of problem but at least if
> ;			total amount for month is negative we don't create
> ;			negative charge)
> ; 04/mar/01 b.e.	- added 'O'ther 'I'ncome processing in addition to
> ;			  current logic that handles 'R'egular and 'M'isc
> ;			  types of Income.
> ; 04/mac/25 b .e.	- changed sequence of factor divide by 100000 to try
> ;			  to avoid rounding errors (approx 5cents on 10,500)
> ; 04/apr/01 b.e. 	- undid the jan 28 change as the GST and TOTEXP calcs
> ;			  were still output and negative so unbalanced with
> ; 06/mar/20 b.e.	- generate of HOLDBK transaction eliminated in
> ;			  u115_common.qts used by this program
> ; 2006/may/10 b.e.      - $1M payroll changes to size of calculated fields
> ; 2008/may/10 brad2     - "AFPADJ" transactions no longer shown on r124a stmnts
> ;			   nor the '94' screen - moved to "C" type transactions
> ;			   in f119 to 'hide' them (shown on new 96 screen)
> ; 2008/jun/05 M.C.      - change access to link to f116-dtl file
> ;			- change criteria when calculating amounts for TOTINC
> ;			- modify criteria in $src/u115_common.qts
> ;			- create records in new subfile f119_tithe
> ; 2008/oct/01 brad1	- added new tot-dept-expense-other calulation to handle TITHE /DEPMEM
> ; 2008/oct/21 brad3	- corrected above code to including 'rolling total' until doctor changes
> ; 2008/oct/22 MC  	- remove redundant codes related to f119_tithe_dtl subfiles
> ;			- add set lock record update
> ; 2008/oct/23 MC	- change final-all-expenses from temp to define item
> ; 2008/oct/25 brad4	- use net not gross in calculation for INCEXP
> ; 2008/oct/25 brad5	- reduce ytdear by this months incexp amount for paycode 2 doctors
> ;			  ie. reduce (ie add) doc-ytdear-plus-amt-manpay by final-all-expenses-plus-dept-expense-other
> ; 2008/oct/25 brad6     - brad5 change above applied only to paycode 2 doctors - link to f112 added to access stmnt
> ; 2008/oct/25 brad7     - brad5 change to reduce ONLY by TITHE expenses - ie the 'other' - the final-all-expenses taken
> ;			  care in by noting the difference between gross/net and using that amount as expenses
> ; 2008/oct/25 brad8     - undo brad4
> ; 2008/oct/25 brad9     - THIS COMMENT LIKELY WRONG - paypot is low by amount of non-tithe expenses and so non-tithe expenses
> ;                         not added into ytdear i.e. only add titheable expenses into ytdear
> ;                         ABOVE COMMENT LIKELY WRONG .. brad9 ignored ytdear and correctly adjusted INCEXP (income - expenses)
> ;                         calculation (variable amt-income-minus-expenses-g) by all expenses (titheable and non-titheable) and
> ;                         thus affected the eventual ytdinc - ytdear pay calculation but making
> ;                         it an (ytd-income(ytd-expenses) - ytd-earnings calcuations.
> ; 2008/nov/18 MC  	- check with final-all-expenses-plus-dept-expense-other intstead of
> ;			  final-all-expenses when createing 'TOTEXP' to f119 subfile
> ; 2013/Aug/26 MC1	- create totinc records unconditionally
> 
> cancel clear
> set stacksize 10000
> run u115
> 
> set default
WORKSPACE and STACKSIZE can't be reset within a QTP run.
> set process 50000
> 
> set lock record update
> 
> global temp ytdear-group   char*1
> global temp ytdear-seq-rpt zoned*2 unsigned
> 
> global temp rmaexr-group   char*1
> global temp rmaexr-seq-rpt zoned*2 unsigned
> 
> global temp rmaexm-group   char*1
> global temp rmaexm-seq-rpt zoned*2 unsigned
> 
> global temp incexp-group   char*1
> global temp incexp-seq-rpt zoned*2 unsigned
> 
> global temp totinc-group   char*1
> global temp totinc-seq-rpt zoned*2 unsigned
> 
> global temp totexp-group   char*1
> global temp totexp-seq-rpt zoned*2 unsigned
> 
> global temp depexr-group   char*1
> global temp depexr-seq-rpt zoned*2 unsigned
> 
> global temp depexm-group   char*1
> global temp depexm-seq-rpt zoned*2 unsigned
> 
> global temp gst-group   char*1
> global temp gst-seq-rpt zoned*2 unsigned
> 
> global temp holdback-group   char*1
> global temp holdback-seq-rpt zoned*2 unsigned
> 
> ;-------------------------------------------------------------------------------
> 
> ;
> ; DETERMINE THE 'REPORTING-SEQ' AND 'COMP CODE GROUP'
> ; FOR THE TRANSACTIONS BEING CREATED IN THIS RUN
> 
> request u115_a_get_ytdear                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "YTDEAR"
Choose viaindex COMP-CODE.
> item ytdear-group   = comp-code-group
> item ytdear-seq-rpt = reporting-seq
> 
> request u115_a_get_rmaexr                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "RMAEXR"
Choose viaindex COMP-CODE.
> item rmaexr-group   = comp-code-group
> item rmaexr-seq-rpt = reporting-seq
> 
> request u115_a_get_rmaexm                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "RMAEXM"
Choose viaindex COMP-CODE.
> item rmaexm-group   = comp-code-group
> item rmaexm-seq-rpt = reporting-seq
> 
> request u115_a_get_incexp                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "INCEXP"
Choose viaindex COMP-CODE.
> item incexp-seq-rpt  = reporting-seq
> item incexp-group    = comp-code-group
> 
> request u115_a_get_totinc                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "TOTINC"
Choose viaindex COMP-CODE.
> item totinc-seq-rpt  = reporting-seq
> item totinc-group    = comp-code-group
> 
> request u115_a_get_totexp                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "TOTEXP"
Choose viaindex COMP-CODE.
> item totexp-seq-rpt  = reporting-seq
> item totexp-group    = comp-code-group
> 
> request u115_a_get_depexr                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "DEPEXR"
Choose viaindex COMP-CODE.
> item depexr-group   = comp-code-group
> item depexr-seq-rpt = reporting-seq
> 
> request u115_a_get_depexm                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "DEPEXM"
Choose viaindex COMP-CODE.
> item depexm-group   = comp-code-group
> item depexm-seq-rpt = reporting-seq
> 
> request u115_a_get_gst                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "GST"
Choose viaindex COMP-CODE.
> item gst-group   = comp-code-group
> item gst-seq-rpt = reporting-seq
> 
> request u115_a_get_holdback                    &
>                 on edit        errors report &
>                 on calculation errors report
> access f190-comp-codes
> choose comp-code "HOLDBK"
Choose viaindex COMP-CODE.
> item holdback-group   = comp-code-group
> item holdback-seq-rpt = reporting-seq
> 
> ;-------------------------------------------------------------------------------
> 
> request u115_run_0                              &
>                 on edit        errors report    &
>                 on calculation errors report
> ;main
> access constants-mstr-rec-6                                     &
> 	link current-ep-nbr viaindex compensation-key2          &
>           to   ep-nbr  of f110-compensation                     &
> 	link doc-nbr of f110-compensation                       &
> 	  to   doc-nbr of f020-doctor-mstr                      &
> ;brad6        (get paycode of doctor)                   &
>         link   current-ep-nbr,                          &
>                doc-nbr of f110-compensation             &
>         viaindex f112-ep-doc-nbr                        &
>         to   ep-nbr ,                                   &
>              doc-nbr of f112-pycdceilings		&
>         link ("FLAT+3_TITHE_LEVELS"),                           &
>              doc-dept,                                          &
>              doc-afp-paym-group,                                &
>              '000',                                             &
>              comp-code                                          &
>           to dept-expense-calc-code,                            &
>              dept-nbr,                                          &
>              doc-afp-paym-group,                                &
>              doc-nbr,                                           &
>              comp-code                                          &
> 	    of f116-dept-expense-rules-dtl alias f116-group  opt  &
>        link comp-code of f110-compensation                     &
>        to   comp-code of f190-comp-codes
> 
> choose const-rec-nbr 6
*W* Item (CONST-REC-NBR) is stored by the file system as a character type.
Choose viaindex CONSTANTS-MSTR-REC-6.
> sorted on doc-nbr   of f110-compensation                        &
>        on ep-nbr    of f110-compensation                        &
>        on comp-code of f110-compensation  ; CHANGED TO SORTED WHEN CHOOSE ADDED !!!!
> 
> 
> ;use $pb_src/gst.use
> use $use/gst.use
> ;   this source is called by:
> ;	u115a.qts, u115b.qts
> ;
> ;define gst-percent int*8 unsigned size 4 = 7
> ; 2010/07/08 - MC - change from 5% to 13% for HST
> ;define gst-percent int*8 unsigned        = 5
> define gst-percent int*8 unsigned        = 13
> use $src/u115_common.qts
> ;     DATE    WHO  WHY
> ; 2004/mar/25 b.e. made common to u115a/b.qts
> ; 2006/mar/20 b.e. while testing a comp code with a factor of 0 (shows amount
> ;		   in gross but pays nothing by turning net to zero) it was
> ;		   discovered that the old 'hold back' feature used in mid-90's
> ;		   was kicking in and generating a HOLDBK comp code for the
> ;		   gross amount. The calculation of this hold back amount
> ;		   changed to always be zero so that it won't intefere with
> ;		   using a factor of 0.00
> ;		   - set to zero by adding a condition 1 = 2 to logic
> ; 2006/jun/09 b.e. - UNDID THE ABOVE CHANGE SO THAT HOLDBK AGAIN CALCULATED
> ; 2006/jun/22 b.e. after change in size of field there occcured rounding
> ; problem giving .01 difference .. changed from > to = in calc of x-amt-gst-only
> ; 2008/jun/05 M.C. - modify criteria for tot-income-gross-reg, tot-income-gross-misc &
> ;			tot-income-gross-other, create tot-tithe-gross-reg,
> ;			tot-tithe-gross-misc & tot-tithe-gross-other
> ;		   - apply the same to tot-income-net-reg/misc/other, and
> ;		     tot-tithe-net-reg/misc/other
> ; 2008/jul/02 brad1 - add  code to catch TITHE expenese - above not working
> ; 2008/jul/02 brad2 - added check that comp-type is I'ncome type when incuding
> ;		      in calculation of:
> ;			  tot-income-gross-reg/misc/other
> ;		      and tot-income-net-reg/misc/other
> ;		      and tot-tithe-gross-reg/misc/other
> ;		      and tot-tithe-net-reg/misc/other
> 
> ; 2008/oct/22 MC -  take out tithe related if conditions for
> ;			  tot-income-gross-reg/misc/other
> ;		      and tot-income-net-reg/misc/other
> ; 2008/oct/25 brad3 - link to f112 added u115a/b.qts and so the following fields
> ;		      found both in f020 and f112 have to be clarified as coming from f020
> ;				doc-dept-expense-percent-reg ,
> ;				doc-dept-expense-percent-misc
> ;				doc-rma-expense-percent-reg
> ;				doc-rma-expense-percent-misc
> ; 2008/nov/18 MC -  To calculate TOTEXP/INCEXP properly, use amt-net instead of amt-gross for x-dept-expense-other
> ;                   titheable expense should use amt-net which represents the mtd amt, amt-gross represents the ytd-amt
> ;	         - delete the new definition of  tot-tithe-gross-reg, tot-tithe-gross-misc & tot-tithe-gross-other
> ;		   and  tot-tithe-net-reg/misc/other
> ; 2012/oct/16 MC1 - modify x-amt-gst-only definition
> 
> ; ----------- CALCULATIONS PERFORMED AT COMP-CODE LEVEL ------------
> 
> ; (Determine Expenses charged (difference between GROSS and NET) using
> ;  FACTOR or non-zero Expense Percentages as indicators as to type of charges
> ;  applied)
> 
> 
> ;def x-income-gross-minus-net       int*8 signed size 4           &
> ;def x-income-gross-minus-net       int*10 signed                 &
> def x-income-gross-minus-net       int*8 signed                 &
>    =  amt-gross  of f110-compensation                            &
>     - amt-net    of f110-compensation
> 
> ;def x-amt-dept-expense-pot-g   int*8 signed size 4                    &
> ;      = round ( (  amt-gross of f110-compensation                     &
> ;                 * doc-dept-expense-percent-reg   ) / 1000000,0,near) &
> ;           if    comp-type     of f190-comp-codes = "I"               &
> ;             and comp-sub-type of f190-comp-codes = "R"               &
> ;   else round ( (  amt-gross of f110-compensation                     &
> ;                 * doc-dept-expense-percent-misc  ) / 1000000,0,near) &
> ;           if    comp-type     of f190-comp-codes = "I"               &
> ;             and comp-sub-type of f190-comp-codes = "M"               &
> ;   else 0
> 
> ;brad1
> def x-dept-expense-other   int*10 signed                              &
> ; 2008/11/18 - MC - use amt-net instead
> ;      = round (  (  amt-gross of f110-compensation                    &
>       = round (  (  amt-net of f110-compensation                    &
> ; 2008/11/28 - end
> ;;;;;;;;                  / 1000000				      &
>   	         ) 					      	      &
> ;;;;;;;;               * factor                   ,0,near	      &
> 	      )							      &
>            if    comp-type     of f190-comp-codes = "E"               &
>              and comp-sub-type of f190-comp-codes = "O"
> 
> temp tot-dept-expense-other   int*10 signed
> item tot-dept-expense-other = tot-dept-expense-other + x-dept-expense-other  &
>            if    comp-type     of f190-comp-codes = "E"               &
>              and comp-sub-type of f190-comp-codes = "O"               &
> 				reset at doc-nbr
> 
> 
> ;def x-amt-dept-expense-pot-g   int*8 signed size 4                    &
> def x-amt-dept-expense-pot-g   int*10 signed                          &
>       = round (  (  amt-gross of f110-compensation                    &
>                   / 1000000					      &
>   	         ) 					      	      &
> ;		brad3						      &
> ;              * doc-dept-expense-percent-reg  ,0,near)		      &
>                * doc-dept-expense-percent-reg of f020-doctor-mstr ,0,near)		      &
>            if    comp-type     of f190-comp-codes = "I"               &
>              and comp-sub-type of f190-comp-codes = "R"               &
>    else round (  (  amt-gross of f110-compensation                    &
>                   / 1000000					      &
>   	         ) 					      	      &
> ;		brad3						     &
> ;              * doc-dept-expense-percent-misc ,0,near)		      &
>                * doc-dept-expense-percent-misc of f020-doctor-mstr,0,near)		      &
>            if    comp-type     of f190-comp-codes = "I"               &
>              and comp-sub-type of f190-comp-codes = "M"               &
>    else 0
> 
> ; (check for inconsistent data where calc'd expense greater than
> ;  difference between gross and net)
> ;def x-amt-dept-expense-g   int*8 signed size 4                         &
> ;def x-amt-dept-expense-g   int*10 signed                               &
> def x-amt-dept-expense-g   int*8 signed                               &
>      = x-amt-dept-expense-pot-g                                        &
>      if       (x-amt-dept-expense-pot-g <  x-income-gross-minus-net    &
>            and amt-gross of f110-compensation > 0)                     &
>         or    (x-amt-dept-expense-pot-g >  x-income-gross-minus-net    &
>            and amt-gross of f110-compensation < 0)                     &
>   else x-income-gross-minus-net
> 
> ;def x-amt-rma-expense-pot-g   int*8 signed size 4                     &
> def x-amt-rma-expense-pot-g   int*10 signed                           &
>       = round (  (  amt-gross of f110-compensation                    &
>                   / 1000000					      &
>   	         ) 					      	      &
> ;		brad3					              &
> ;              * doc-rma-expense-percent-reg  ,0,near)		      &
>                * doc-rma-expense-percent-reg of f020-doctor-mstr ,0,near)		      &
>            if    comp-type     of f190-comp-codes = "I"               &
>              and comp-sub-type of f190-comp-codes = "R"               &
>    else round (  (  amt-gross of f110-compensation                    &
>                   / 1000000					      &
>   	         ) 					      	      &
> ;		brad3						     &
> ;               * doc-rma-expense-percent-misc ,0,near)		      &
>                * doc-rma-expense-percent-misc of f020-doctor-mstr,0,near)		      &
>            if    comp-type     of f190-comp-codes = "I"               &
>              and comp-sub-type of f190-comp-codes = "M"               &
>    else 0
> 
> ;def x-amt-rma-expense-only       int*8 signed size 4 			 &
> ;def x-amt-rma-expense-only       int*10 signed          		&
> def x-amt-rma-expense-only       int*8 signed          		&
>     =  x-amt-rma-expense-pot-g                          		&
>       if    (    x-income-gross-minus-net > (  x-amt-dept-expense-g	&
>                        	                     + x-amt-rma-expense-pot-g) &
>              and amt-gross of f110-compensation > 0			&
> 	    )    							&
>          or (    x-income-gross-minus-net < (  x-amt-dept-expense-g 	&
>                                              + x-amt-rma-expense-pot-g) &
>              and  amt-gross of f110-compensation < 0			&
> 	    )      							&
>  else   x-income-gross-minus-net					&
>       - x-amt-dept-expense-g
> 
> ;def x-amt-gst-pot-g     int*8 signed size 4      &
> ;def x-amt-gst-pot-g     int*10 signed           &
> def x-amt-gst-pot-g     int*8 signed           &
>      =  round (    (   x-amt-rma-expense-only   &
>                      * gst-percent 		&
> 		   )				&
> 		 / 100				&
> 	       ,0,near				&
> 	      )                         	&
>            if doc-ind-pays-gst = "Y"            &
>   else  0
> 
> ; 2006/jun/22 b.e. after change in size of field there occcured rounding
> ; problem giving .01 difference .. changed from > to =
> 
> def x-amt-round-off int*8 =   absolute(x-income-gross-minus-net) &
> 		  	    - absolute(x-amt-dept-expense-g)  	&
> 			    - absolute(x-amt-rma-expense-only) 	&
> 			    - absolute(x-amt-gst-pot-g)
> 
> ;def x-amt-gst-only      int*8 signed size 4       		 &
> ;def x-amt-gst-only      int*10 signed              		&
> def x-amt-gst-only      int*8 signed              		&
>      =  x-amt-gst-pot-g
> ; 2012/10/16 - MC - comment out the if conditions as suggested by Brad to see what will happen
> ;     =  x-amt-gst-pot-g                           		&
> ;	    if     (     (     (   x-income-gross-minus-net 	&
> ;		                >  (  x-amt-dept-expense-g  	&
> ;	                            + x-amt-rma-expense-only 	&
> ;			            + x-amt-gst-pot-g		&
> ;			           )      			&
> ;			       )				&
> ;	       	           and amt-gross of f110-compensation > 0 &
> ;		         ) 					&
> ;	              or (      (   x-income-gross-minus-net 	&
> ;			          <  (  x-amt-dept-expense-g  	&
> ;				      + x-amt-rma-expense-only 	&
> ;				      +  x-amt-gst-pot-g	&
> ;				     )      			&
> ;			        )				&
> ;	         	and amt-gross of f110-compensation < 0) &
> ;	  	    )					        &
> ;		   (account for rounding where diff may be +- .05 cents)
> ;	        and (  x-amt-round-off > 5			&
> ;	    	    )						&
> ;   else (  x-income-gross-minus-net                             &
> ;         - x-amt-dept-expense-g                                 &
> ;         - x-amt-rma-expense-only                               &
> ;        )
> ; 2012/10/16 - end
> 
> ;def x-amt-rma-expense-plus-gst-g    int*8 signed size 4          &
> def x-amt-rma-expense-plus-gst-g    int*10 signed                &
>          =  x-amt-rma-expense-only                              &
>           + x-amt-gst-only
> 
> ; (RMA 'Holdback ' calculated as difference between 'GROSS and NET'
> ;  minus 'DEPT Expense + RMA Expense + GST')
> ;def x-amt-holdback-g             int*8 signed size 4    &
> ;    =  x-income-gross-minus-net                         &
> ;     - x-amt-dept-expense-g                             &
> ;     - x-amt-rma-expense-plus-gst-g                     &
> ;   if         (x-income-gross-minus-net > (x-amt-dept-expense-g &
> ;		+  x-amt-rma-expense-plus-gst-g)	&
> ;          and  amt-gross of f110-compensation > 0)      &
> ;      or      (x-income-gross-minus-net < (x-amt-dept-expense-g &
> ;		+  x-amt-rma-expense-plus-gst-g)	&
> ;          and  amt-gross of f110-compensation < 0)      &
> ; else 0
> 
> ;def x-amt-holdback-g             int*8 signed size 4    &
> def x-amt-holdback-g             int*10 signed          &
>     = round(  x-income-gross-minus-net                  &
>             - x-amt-dept-expense-g                      &
>             - x-amt-rma-expense-plus-gst-g              &
>            )                                            &
>           if      (   (        x-income-gross-minus-net        	&
>                            > (  x-amt-dept-expense-g            &
>                               + x-amt-rma-expense-plus-gst-g    &
>                              )                                 	&
>                         and  amt-gross of f110-compensation > 0 &
>                        )                                        &
>                     or (      x-income-gross-minus-net         	&
>                           < (  x-amt-dept-expense-g            	&
>                              + x-amt-rma-expense-plus-gst-g    	&
>                             )                                  	&
>                         and  amt-gross of f110-compensation < 0 &
>                        )                                        &
> 	          )					   	&
> ;;;;;;;;;;;;;;;;;;;;	      and 1 = 2 & ; set condition always false so that holdback not generated regardless of previous logic
>  else 0
> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
> 
> ;(IF HOLDBACK IS LESS THAN OR = 10 CENTS AND THERE WAS PREVIOUS
> ; NON-ZERO EXPENSE CALCULATIONS, THEN IGNORE THE CALCULATED HOLDBACK
> ; AND ADD THE AMOUNT OF THE LEFT OVER "HOLDBACK" BACK INTO THE
> ; LAST NON-ZERO EXPENSE CALCUATION)
> ; 2000/nov/23 B.E. changed limit from 10 cents to a dollar
> def  x-amt-holdback-final					&
>     = x-amt-holdback-g						&
> ;	if   x-amt-holdback-g > 10				&
> 	if   x-amt-holdback-g > 100				&
>           or (    x-amt-rma-expense-only = 0			&
>               and x-amt-dept-expense-g   = 0			&
> 	     )							&
>  else 0
> 
> def x-amt-rma-expense-final					&
>     =   x-amt-rma-expense-only					&
>       + x-amt-holdback-g					&
>      	if     x-amt-holdback-g < 10				&
>            and x-amt-rma-expense-only <> 0			&
>    else   x-amt-rma-expense-only
> 
> def x-amt-dept-expense-final					&
>         =   x-amt-dept-expense-g				&
> 	  + x-amt-holdback-g					&
>      if     x-amt-holdback-g < 10				&
>  	and x-amt-dept-expense-g <>  0				&
>    else   x-amt-dept-expense-g
> 
> ;def x-amt-rma-expense-plusgst-final int*8 signed size 4            &
> def x-amt-rma-expense-plusgst-final int*10 signed               &
>          =  x-amt-rma-expense-final                             &
>           + x-amt-gst-only
> 
> ; ----------- CALCULATIONS SUMMED TO DOC-NBR LEVEL ------------
> ;temp    tot-income-gross-reg  int*8 signed size 4
> temp    tot-income-gross-reg  int*10 signed
> item    tot-income-gross-reg                            &
>      =  tot-income-gross-reg                            &
>       + amt-gross of f110-compensation                  &
> ;		   brad2				&
>              if    comp-type     of f190-comp-codes = "I"	&
>                and comp-sub-type of f190-comp-codes = "R"	&
>   else tot-income-gross-reg                             &
>   reset at doc-nbr
> ;temp    tot-income-gross-misc int*8 signed size 4
> temp    tot-income-gross-misc int*10 signed
> item    tot-income-gross-misc                           &
>      =  tot-income-gross-misc                           &
>       + amt-gross of f110-compensation                  &
> ;		   brad2				&
>            if    comp-type     of f190-comp-codes = "I"	&
>              and comp-sub-type of f190-comp-codes = "M"	&
>   else tot-income-gross-misc                           	&
>   reset at doc-nbr
> ;temp    tot-income-gross-other int*8 signed size 4
> temp    tot-income-gross-other int*10 signed
> item    tot-income-gross-other                          &
>      =  tot-income-gross-other                          &
>       + amt-gross of f110-compensation                  &
> ;		   brad2				&
>             if    comp-type     of f190-comp-codes = "I"	&
>               and comp-sub-type of f190-comp-codes = "O"	&
>   else tot-income-gross-other                           &
>   reset at doc-nbr
> 
> ;temp    tot-income-net-reg  int*8 signed size 4
> temp    tot-income-net-reg  int*10 signed
> item    tot-income-net-reg                              &
>      =  tot-income-net-reg                              &
>       + amt-net of f110-compensation                    &
> ;		   brad2				&
>       if    comp-type     of f190-comp-codes = "I"	&
>         and comp-sub-type of f190-comp-codes = "R"	&
>   else tot-income-net-reg                               &
>   reset at doc-nbr
> ;temp    tot-income-net-misc int*8 signed size 4
> temp    tot-income-net-misc int*10 signed
> item    tot-income-net-misc                             &
>      =  tot-income-net-misc                             &
>       + amt-net of f110-compensation                    &
> ;		   brad2				&
>             if    comp-type     of f190-comp-codes = "I"	&
>               and comp-sub-type of f190-comp-codes = "M"	&
>   else tot-income-net-misc                              &
>   reset at doc-nbr
> ;temp    tot-income-net-other int*8 signed size 4
> temp    tot-income-net-other int*10 signed
> item    tot-income-net-other                            &
>      =  tot-income-net-other                            &
>       + amt-net of f110-compensation                    &
> ;		   brad2				&
>             if    comp-type     of f190-comp-codes = "I"	&
>               and comp-sub-type of f190-comp-codes = "O"	&
>   else tot-income-net-other                             &
>   reset at doc-nbr
> 
> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
> 
> ;temp    tot-dept-expense-reg         int*8 signed size 4
> temp    tot-dept-expense-reg         int*10 signed
> item    tot-dept-expense-reg                            &
>      =  tot-dept-expense-reg                            &
>       + x-amt-dept-expense-final                            &
>           if comp-sub-type = "R"                        &
>   else  tot-dept-expense-reg                            &
>   reset at doc-nbr
> ;temp    tot-dept-expense-misc        int*8 signed size 4
> temp    tot-dept-expense-misc        int*10 signed
> item    tot-dept-expense-misc                           &
>      =  tot-dept-expense-misc                           &
>       + x-amt-dept-expense-final                            &
>           if comp-sub-type = "M"                        &
>   else  tot-dept-expense-misc                           &
>   reset at doc-nbr
> 
> ;temp    tot-rma-expense-plus-gst-reg        int*8 signed size 4
> temp    tot-rma-expense-plus-gst-reg        int*10 signed
> item    tot-rma-expense-plus-gst-reg                            &
>      =  tot-rma-expense-plus-gst-reg                            &
>       + x-amt-rma-expense-plusgst-final                 &
>           if comp-sub-type = "R"                        &
>   else  tot-rma-expense-plus-gst-reg                            &
>   reset at doc-nbr
> 
> ;temp    tot-rma-expense-plus-gst-misc       int*8 signed size 4
> temp    tot-rma-expense-plus-gst-misc       int*10 signed
> item    tot-rma-expense-plus-gst-misc                           &
>      =  tot-rma-expense-plus-gst-misc                           &
>       + x-amt-rma-expense-plusgst-final                        &
>           if comp-sub-type = "M"                                &
>   else  tot-rma-expense-plus-gst-misc                           &
>   reset at doc-nbr
> 
> ;temp    tot-rma-expense-only-reg        int*8 signed size 4
> temp    tot-rma-expense-only-reg        int*10 signed
> item    tot-rma-expense-only-reg                                &
>      =  tot-rma-expense-only-reg                                &
>       + x-amt-rma-expense-final                                  &
>           if comp-sub-type = "R"                                &
>   else  tot-rma-expense-only-reg                                &
>   reset at doc-nbr
> ;temp    tot-rma-expense-only-misc       int*8 signed size 4
> temp    tot-rma-expense-only-misc       int*10 signed
> item    tot-rma-expense-only-misc                               &
>      =  tot-rma-expense-only-misc                               &
>       + x-amt-rma-expense-final                                  &
>           if comp-sub-type = "M"                                &
>   else  tot-rma-expense-only-misc                               &
>   reset at doc-nbr
> 
> ;temp    tot-gst-only-reg        int*8 signed size 4
> temp    tot-gst-only-reg        int*10 signed
> item    tot-gst-only-reg                                &
>      =  tot-gst-only-reg                                &
>       + x-amt-gst-only                                  &
>           if comp-sub-type = "R"                        &
>   else  tot-gst-only-reg                                &
>   reset at doc-nbr
> ;temp    tot-gst-only-misc       int*8 signed size 4
> temp    tot-gst-only-misc       int*10 signed
> item    tot-gst-only-misc                               &
>      =  tot-gst-only-misc                               &
>       + x-amt-gst-only                                  &
>           if comp-sub-type = "M"                        &
>   else  tot-gst-only-misc                       &
>   reset at doc-nbr
> 
> ;temp    tot-holdback-only-reg   int*8 signed size 4
> temp    tot-holdback-only-reg   int*10 signed
> item    tot-holdback-only-reg                           &
>      =  tot-holdback-only-reg                           &
>       + x-amt-holdback-final                                &
>           if comp-sub-type = "R"                        &
>   else  tot-holdback-only-reg                           &
>   reset at doc-nbr
> 
> ;temp    tot-holdback-only-misc  int*8 signed size 4
> temp    tot-holdback-only-misc  int*10 signed
> item    tot-holdback-only-misc                          &
>      =  tot-holdback-only-misc                          &
>       + x-amt-holdback-final                                &
>           if comp-sub-type = "M"                        &
>   else  tot-holdback-only-misc                  &
>   reset at doc-nbr
> 
> ;temp    tot-revhbk	int*8 signed size 4
> temp    tot-revhbk	int*10 signed
> item    tot-revhbk = tot-revhbk + amt-net of f110-compensation &
> 	if  comp-type of f110-compensation = 'E'		&
> 	and (comp-code of f110-compensation = 'REVHBK'		&
> 	 or  comp-code of f110-compensation = 'REVCLA')		&
>    else tot-revhbk    reset at doc-nbr
> 
> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
> 
> ; current EP Manual Payments affect the YTD Earnings (YTDEAR)
> ;temp amt-manpay   integer*8 signed size 4
> temp amt-manpay   integer*10 signed
> item amt-manpay   = amt-manpay   + amt-net of f110-compensation    &
>                         if    comp-type of f110-compensation="M"   &
>                else amt-manpay                                     &
>                         reset at doc-nbr
> 
> ; if new record, initial YTD record in F119.  (required only for
> ; "I"ncome, AND "E"xpense records - .ie calc rec types like CEICEA are
> ;  needed AND the "D"eduction records are handled in the tax/eft processing)
> 
> ;brad2 - hide AFPADJ transactions
> define x-rec-type  char*1 = "A"
> define rec-type  char*1					&
>       = "C" if comp-code of f110-compensation = "AFPADJ"	&
>    else "A"
> 
> 
> ;def x-not-needed integer*8 signed size 4 = 0
> def x-not-needed integer*10 signed        = 0
> 
> 
> ; (GROSS VALUES ARE USUALLY PUT INTO F119 HOWEVER FOR CEIEXP THE NET VALUE IS REQUIRED)
> 
> ;def x-amt-net int*8 signed size 4                                      &
> def x-amt-net int*10 signed                                     &
>         = amt-gross of f110-compensation                        &
>                  if comp-code of f110-compensation = "CEIEXP"	&
>      else amt-net   of f110-compensation
> ;def x-amt-gross int*8 signed size 4                                     &
> def x-amt-gross int*10 signed                                   &
>         = amt-net   of f110-compensation                        &
>                  if comp-code of f110-compensation = "CEIEXP"   &
>      else amt-gross of f110-compensation
> 
> ; don't put trans into subfile unless it's to appear in '94' screen
> subfile f119 keep                                	&
>   if    (   comp-type of f190-comp-codes = "I"   	&
>          or comp-type of f190-comp-codes = "E"   	&
>          or comp-type of f190-comp-codes = "A"   	&
>          or comp-type of f190-comp-codes = "M"   	&
>          or comp-type of f190-comp-codes = "P" 	 	&
> 	)  					 	&
> ;brad3
> ;    and (  not record f116-group  exists      &
> ;         or (     record f116-group exists    &
> ;             and tithe-in-ex-clude-flag = 'E' &
> ;            )                                 &
> ;         or (     record f116-group exists    &
> ;             and tithe-in-ex-clude-flag = "I" &
> ;             and flag-display-hide      = "N" &
> ;            )                                 &
> ;	)					&
>       include                                     &
>          doc-nbr   of f110-compensation         , &
>          comp-code of f110-compensation         , &
>          reporting-seq   of f190-comp-codes     , &
>          comp-code-group of f190-comp-codes     , &
> ;         x-rec-type                             , &
>          rec-type                             , &
>          x-amt-net                              , &
>          x-amt-gross
> 
> def x-comp-code char*6 = "RMAEXR"
> subfile f119 alias f119-rmaexr   append     at doc-nbr          &
>    if tot-rma-expense-only-reg <> 0    include                  &
> ;   if tot-rma-expense-only-reg  > 0    include                  &
>          doc-nbr of f110-compensation   , &
>          x-comp-code                    , &
>          rmaexr-seq-rpt                 , &
>          rmaexr-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-rma-expense-only-reg
> 
> def x-comp-code-rmaexm char*6 = "RMAEXM"
> subfile f119 alias f119-rmaexm   append     at doc-nbr      &
>   if tot-rma-expense-only-misc <> 0    include              &
> ;  if tot-rma-expense-only-misc  > 0    include              &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-rmaexm             , &
>          rmaexm-seq-rpt                 , &
>          rmaexm-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-rma-expense-only-misc
> 
> def x-comp-code-gst char*6 = "GST"
> ;def tot-gst-only integer*8 signed size 4        		&
> def tot-gst-only integer*10 signed        &
>     =  tot-gst-only-reg                   &
>      + tot-gst-only-misc
> subfile f119 alias f119-gst      append     at doc-nbr &
>   if tot-gst-only  <> 0  include          &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-gst                , &
>          gst-seq-rpt                    , &
>          gst-group                      , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-gst-only
> 
> def x-comp-code-holdback char*6 = "HOLDBK"
> ;def tot-holdback-only integer*8 signed size 4        			&
> def tot-holdback-only integer*10 signed   &
>     =  tot-holdback-only-reg              &
>      + tot-holdback-only-misc
> subfile f119 alias f119-holdback      append     at doc-nbr     &
>   if tot-holdback-only  <> 0  include                           &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-holdback           , &
>          holdback-seq-rpt               , &
>          holdback-group                 , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-holdback-only
> 
> def x-comp-code-totinc char*6 = "TOTINC"
> ;def tot-income-gross   integer*8 signed size 4  		&
> def tot-income-gross   integer*10 signed        &
>     =  tot-income-gross-reg                     &
>      + tot-income-gross-misc			&
>      + tot-income-gross-other
> ;def tot-income-net     integer*8 signed size 4  		&
> def tot-income-net     integer*10 signed        &
>     =  tot-income-net-reg                       &
>      + tot-income-net-misc			&
>      + tot-income-net-other
> subfile f119 alias f119-totinc   append     at doc-nbr      &
> ; 2013/08/26 - MC1
> ;  if tot-income-net <> 0           include                          &
>                                    include                          &
> ; 2013/08/26 - end
>          doc-nbr of f110-compensation   , &
>          x-comp-code-totinc             , &
>          totinc-seq-rpt                 , &
>          totinc-group                   , &
>          x-rec-type                     , &
>          tot-income-net                 , &
>          tot-income-gross
> 
> def x-comp-code-depexr char*6 = "DEPEXR"
> subfile f119 alias f119-depexr   append     at doc-nbr    &
>    if tot-dept-expense-reg  <> 0           &
>       include                             &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-depexr             , &
>          depexr-seq-rpt                 , &
>          depexr-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-dept-expense-reg
> def x-comp-code-depexm char*6 = "DEPEXM"
> subfile f119 alias f119-depexm   append     at doc-nbr    &
>    if tot-dept-expense-misc <> 0           &
>       include                             &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-depexm             , &
>          depexm-seq-rpt                 , &
>          depexm-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          tot-dept-expense-misc
> 
> ; ('Total Expense" = all "E"xpense trans found in file PLUS the
> ;  expense transactions calculated by the pgm IE. 'RMA EXPENSE', 'GST'
> ;  and 'DEPARTMENT EXPENSE' and 'HOLDBACK')
> ;temp final-all-expenses integer*8 size 4
> ; 2008/10/23 - MC - change to define instead
> ;temp final-all-expenses integer*10
> ;item final-all-expenses                                    &
> def  final-all-expenses integer*10                        &
> ; 2008/10/23 - end
>      =  tot-dept-expense-reg                               &
>       + tot-dept-expense-misc                              &
>       + tot-rma-expense-only-reg                           &
>       + tot-rma-expense-only-misc                          &
>       + tot-gst-only                                       &
>       + tot-holdback-only                                  &
>       + tot-revhbk					   &
>       + doc-ceicex         ; 93/SEP/24
> 
> ;brad1
> ; don't include the new dept-expense-other in final-all-expenses otherwise
> ; it will mess up totalling that generates 'holdBK' calculation
> 
> ; 2008/10/23 - MC - comment out and change to define instead
> ;;temp final-all-expenses-plus-dept-expense-other integer*10
> ;;item final-all-expenses-plus-dept-expense-other			&
> ;     =  final-all-expenses                                 	&
> ;      + tot-dept-expense-other
> ; brad3 fix temp statement
> ;;     =  final-all-expenses-plus-dept-expense-other		&
> ;;      + final-all-expenses                                 	&
> ;;      + tot-dept-expense-other 		reset at doc-nbr
> 
> def  final-all-expenses-plus-dept-expense-other integer*10	&
>      =  final-all-expenses                            		&
>       + tot-dept-expense-other
> ; 2008/10/23 - end
> 
> 
> def x-comp-code-totexp char*6 = "TOTEXP"
> ;brad1
> subfile f119 alias f119-totexp   append     at doc-nbr         &
> ; 2008/11/18 - MC
> ;   if final-all-expenses  <> 0         include                		&
>    if final-all-expenses-plus-dept-expense-other  <> 0   include   	&
> ; 2008/11/18 - end
>          doc-nbr of f110-compensation   , &
>          x-comp-code-totexp             , &
>          totexp-seq-rpt                 , &
>          totexp-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
> ;	 brad1				  &
> 	 final-all-expenses-plus-dept-expense-other
> ;         	final-all-expenses
> 
> ;brad4 /brad8
> temp amt-income-minus-expenses-g integer*10 signed
> ;temp amt-income-minus-expenses-n integer*10 signed
> ;brad8							&
> item amt-income-minus-expenses-g                        &
> ;item amt-income-minus-expenses-n                       &
> ;brad8							&
>         =  tot-income-gross                             &
> ;      =  tot-income-net                                &
> ;brad1							&
> ;        - final-all-expenses
> 	 - final-all-expenses-plus-dept-expense-other
> ;brad9							&
> ;        - final-all-expenses
> ; 	 - final-all-expenses-plus-dept-expense-other
> ;	- tot-dept-expense-other
> 
> def x-comp-code-incexp char*6 = "INCEXP"
> subfile f119 alias u115-incexp   append     at doc-nbr         &
> @if dg and hsc
>_;brad4 / brad8
>_    if amt-income-minus-expenses-g <> 0    &
>_;  if amt-income-minus-expenses-n <> 0    &
>_@endif
>      include                              &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-incexp             , &
>          incexp-seq-rpt                 , &
>          incexp-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
> ;brad4   / brad8
>           amt-income-minus-expenses-g
> ;         amt-income-minus-expenses-n
> 
> ;temp doc-ytdear-plus-amt-manpay  integer*8 signed size 4
> temp doc-ytdear-plus-amt-manpay  integer*10 signed
> item doc-ytdear-plus-amt-manpay                         &
>  =   doc-ytdear of f020-doctor-mstr                     &
>    + amt-manpay                                         ;&
> ; brad5 / brad6                                         &
> ;   - final-all-expenses-plus-dept-expense-other	&
> ; brad7
> ;   + final-all-expenses-plus-dept-expense-other         if doc-pay-code = "2"   &
> ;brad12 - no expenses
> ;    + tot-dept-expense-other                             if doc-pay-code = "2"   &
> ; else                                                   &
> ;     doc-ytdear of f020-doctor-mstr                     &
> ;   + amt-manpay
> 
> def x-comp-code-ytdear char*6 = "YTDEAR"
> subfile f119 alias f119-ytdear   append     at doc-nbr          &
>    include                                                      &
>          doc-nbr of f110-compensation   , &
>          x-comp-code-ytdear             , &
>          ytdear-seq-rpt                 , &
>          ytdear-group                   , &
>          x-rec-type                     , &
>          x-not-needed                   , &
>          doc-ytdear-plus-amt-manpay
> 
> ;brad1
> subfile brad1 keep  include 	&
>  doc-nbr of f110-compensation,	&
>  comp-code of f110-compensation ,&
>  comp-type of f190-comp-codes  , &
>  comp-sub-type of f190-comp-codes   , &
>  amt-gross of f110-compensation, &
>  final-all-expenses                                    ,&
>  final-all-expenses-plus-dept-expense-other		,&
>  tot-dept-expense-reg                               ,&
>  tot-dept-expense-misc                              ,&
>  tot-rma-expense-only-reg                           ,&
>  tot-rma-expense-only-misc                          ,&
>  tot-gst-only                                       ,&
>  tot-holdback-only                                  ,&
>  tot-revhbk					   ,&
>  doc-ceicex , &
> ;brad4 / brad8 &
>  amt-income-minus-expenses-g                        ,&
> ;amt-income-minus-expenses-n                        ,&
> ;brad 2008/ict/24
>  tot-income-net                               , &
>  tot-income-gross                             , &
>  final-all-expenses-plus-dept-expense-other, &
>  tot-dept-expense-other, &
>  final-all-expenses
*W* Duplicate item name in subfile description : 
FINAL-ALL-EXPENSES-PLUS-DEPT-EXPENSE-OTHER
*W* Duplicate item name in subfile description : FINAL-ALL-EXPENSES
> 
> use $src/u115_debug.qts
> ; changes
> ; 2008/oct/23 brad1 - added to addtion fields to debug file: final-all-expenses-plus-dept-expense-other / tot-dept-expense-other
> ; 2008/oct/25 brad3 - due to change in u115a/b had to clarify doc-dept/rma-epxense-percent-reg/misc
> ; 2008/oct/24 brad4 - change gross to net variable name
> ; 2008/oct/26 brad8 - undo above brad4 change
> ;
> ; u115_debug.qts
> subfile debugu115a_at_comp_code keep include &
> doc-nbr of f110-compensation ,				&
> comp-code of f110-compensation,				&
> amt-gross  of f110-compensation, 			&
> amt-net    of f110-compensation,			&
> comp-type     of f190-comp-codes,			&
> comp-sub-type of f190-comp-codes,			&
> current-ep-nbr ,					&
> ;brad3							&
> ;doc-dept-expense-percent-reg,				&
> doc-dept-expense-percent-reg of f020-doctor-mstr,	&
> ;doc-dept-expense-percent-misc,				&
> doc-dept-expense-percent-misc of f020-doctor-mstr,	&
> doc-ind-pays-gst,					&
> ;brad3							&
> ;doc-rma-expense-percent-misc,				&
> doc-rma-expense-percent-misc of f020-doctor-mstr,	&
> ;doc-rma-expense-percent-reg,				&
> doc-rma-expense-percent-reg of f020-doctor-mstr,	&
> ep-nbr    of f110-compensation,				&
> x-income-gross-minus-net,				&
> x-amt-dept-expense-pot-g,				&
> x-amt-dept-expense-g,					&
> gst-percent,						&
> x-amt-gst-pot-g,					&
> x-amt-gst-only,						&
> x-amt-rma-expense-only,					&
> x-amt-rma-expense-pot-g,				&
> x-amt-rma-expense-plus-gst-g,				&
> x-amt-holdback-g,					&
> x-amt-holdback-final,					&
> x-amt-rma-expense-final,				&
> x-amt-rma-expense-plusgst-final	,			&
> tot-income-gross-reg,			&
> tot-income-gross-misc,			&
> tot-income-gross-other,			&
> tot-income-net-reg,			&
> tot-income-net-misc,			&
> tot-income-net-other,			&
> tot-dept-expense-reg,			&
> tot-dept-expense-misc,			&
> tot-rma-expense-plus-gst-reg,		&
> tot-rma-expense-plus-gst-misc,		&
> tot-rma-expense-only-reg,		&
> tot-rma-expense-only-misc,		&
> tot-gst-only-reg,			&
> tot-gst-only-misc,			&
> tot-holdback-only-reg,			&
> tot-holdback-only-misc,			&
> tot-revhbk,				&
> amt-manpay,				&
> final-all-expenses,			&	; not reset at doctor mstr?
> ;brad1 added 2008/oct/23		&
> final-all-expenses-plus-dept-expense-other,&
> tot-dept-expense-other,			&
> ;					&
> ;brad4 / brad8				&
> amt-income-minus-expenses-g,		&	; not reset
> ;amt-income-minus-expenses-n,		&	; not reset
> doc-ytdear-plus-amt-manpay,		&	; not reset
> doc-ytdear of f020-doctor-mstr
> 
> subfile debugu115a_at_doc_nbr keep at doc-nbr include &
> doc-nbr of f110-compensation,		&
> tot-income-gross-reg,			&
> tot-income-gross-misc,			&
> tot-income-gross-other,			&
> tot-income-net-reg,			&
> tot-income-net-misc,			&
> tot-income-net-other,			&
> tot-dept-expense-reg,			&
> tot-dept-expense-misc,			&
> tot-rma-expense-plus-gst-reg,		&
> tot-rma-expense-plus-gst-misc,		&
> tot-rma-expense-only-reg,		&
> tot-rma-expense-only-misc,		&
> tot-gst-only-reg,			&
> tot-gst-only-misc,			&
> tot-holdback-only-reg,			&
> tot-holdback-only-misc,			&
> tot-revhbk,				&
> amt-manpay,				&
> final-all-expenses,                     &       ; not reset at doctor mstr?
> ;brad1 added 2008/oct/23                &
> final-all-expenses-plus-dept-expense-other,&
> tot-dept-expense-other,                 &
> ;                                       &
> ;brad4 / brad8				&
> amt-income-minus-expenses-g,		&	; not reset
> ;amt-income-minus-expenses-n,		&	; not reset
> doc-ytdear-plus-amt-manpay,		&	; not reset
> doc-ytdear of f020-doctor-mstr
> 
> build $pb_obj/u115a
0 ERRORS  3 WARNINGS.
Mon Aug 26 14:50:07 EDT 2013
