;#> PROGRAM-ID.     u115b.qts
;
;       ((C)) Dyad Technologies
;
;    PURPOSE: sub-process witHIN "EARNINGS GENERATION" PROCESS.
;             CALCULATE REQUIRED 'TOT'AL / 'YTD' TRANSACTIONS AS OF CURRENT EP
;
;    MODIFICATION HISTORY
;        DATE    SAF #  WHO      DESCRIPTION
;     92/JAN/01  ____   B.E.     - original
;     92/MAY/01  ____   B.E.     - Added YTDGUC logic
;     92/MAY/11  ____   B.E.     - YTDGUC logic changed from 1C to 1B (YTDGUC)
;     92/AUG/11  ____   B.E.     - MOVED YTD LOGIC INTO 2ND REQUEST
;     92/SEP/14  ----   B.E.     - COMMENT OUT OUTPUT OF YTDGUx TRANSACTION
;                                  SINCE GTYPEx IS NOW CALCULATED AS YTD NOT
;                                  CURRENT EP.  IF GTYPEx CHANGED RE-ACTIVATE
;                                  THE TYDGUx code.
;     92/OCT/26  ----   B.E.     - Updated F020 with YTDINC value
;     92/NOV/10         B.E.     - updated F020 within this run with OUTPUT stmt
;                                  rather than using U115 SUBFILE.
;     93/APR/10         B.E.     - YTDCEA/CEX use values in DOCTOR-MSTR rather
;                                  than calculated ones.
;     93/MAY/06         B.E.     - Added SUBFILE F119
;     93/MAY/11         B.E.     - Added ACCESS of F119-DOCTOR-YTD to preset
;     93/MAY/18         B.E.     - INTEGER*4 for zoned*8, F119/F119 SUBFILE changes
;                                  YTD values
;     93/MAY/27         B.E.     - *F119 exclude records added to F119
;                                - add/subtract F110 "M"anual type recs to F020's YTDEAR (ytd earnings)
;                                - changed YTDxxx to use = not < current-ep-nbr
;                       ?????? WITH ABOVE = VS < CHANGE IS THIS CODE NOW NOT REQUIRED ????????????????
;     93/JUN/01         B.E.     - removed ADD of recs to F119-DOCTOR-YTD, all records
;                                 now added to *F119 and then U122 adds them to F119-YTD
;     93/JUN/22         B.E.     - added Part timer Expense logic
;     93/AUG/09         B.E.     - GST/AMT EXPENSE now calculated by
;                                  separating these two amounts from the
;                                  the amount of the difference between
;                                  GROSS and NET amounts.
;     93/SEP/14         B.E.     - added RMA+GST and DEPT MISC/REG Expense Logic
;                                  and rounding of result
;     93/SEP/20         B.E.     - added separate expenses for RMA MISC/REG.
;                                  now using RMAEXR(RMA  Regular expense),
;                                            RMAEXM(RMA  Misc.   expense),
;                                            DEPEXR(DEPT Regular expense),
;                                            DEPEXM(DEPT Misc.   expense)
;                                  OUTPUT RMA and DEPT expense only if > 0
;     93/SEP/24         B.E.     - added DOCTOR'S CEIEXP to TOTEXP amount
;     93/SEP/28         B.E.     - changed update of *F119 from GROSS to NET values
;     93/OCT/02         B.E.     - OUTPUT TOTxxx records to *F119 only if > 0
;     93/OCT/05         B.E.     - RMA-EXPENSE calc. as diff between GROSS and NET
;                                  minus DEPT-EXPENSE even if doctor's RMA
;                                  EXPENSE PERCENTAGES are zero.
;     93/OCT/26         B.E.     - changed IF > 0  to IF <> 0 on all OUTPUT stmnts
;     93/OCT/30         B.E.     - AMT-INCOME-MINUS-EXPENSES-G now allowed  to go
;                                  negative (otherwise negative income
;                                  wasn't reported correctly)
;     93/DEC/03         B.E.     - for CEIEXP used AMT-NET not 0 in calc.
;     93/DEC/24         B.E.     - put YTDEAR into *F119 for update into F119-DOCTOR-YTD
;
;     94/MAR/07         M.C.     - ADD THE CONDITIONAL COMPILE FOR 'INCEXP'
;                                  LOGIC
;     94/MAR/16         M.C.     - INCLUDE COMP-TYPE 'P' IN THE SUBFILE,
;                                - CHANGE THE FORMULA FOR CALCULATING
;                                  DEPT AND RMA EXPENSE
;     95/MAY/02		M.C.	 - ADD THE BACKHOLD AS PART OF THE
;				   EXPENSE
;     95/MAY/08         M.C.     - COMMENT OUT THE SUBFILE DEBUGU115A,
;				   MESSAGE 'VIRTUAL MEMORY HAS EXCEEDED'
;				   OCCURRED WHEN EXECUTING PROGRAM EVEN
;				   THE STACKSIZE HAS INCREASED FROM 1500
;				   TO 10000. NOTE:  KEEP IN MIND THAT
;				   SIMILIAR PROBLEM MAY OCCUR IF THERE
;				   ARE MORE ITEMS, SUBFILES OR RECORDS
;				   TO BE ADDED IN THE REQUESTS
;     95/MAY/09		M.C.	 - CALCULATE THE RMA EXPENSE BY THE
;				   DOCTOR RMA EXPENSE PERCENTAGE RATHER
;				   THAN THE REMAINING VALUE BETWEEN
;				   GROSS - NET - DEPT
;     95/JUL/05         M.C.     - IF HOLDBACK < 10 CENTS, ADD TO RMA
;				   EXPENSE IF RMA-EXPENSE IS NON-ZERO;
;				   OTHERWISE, ADD TO DEPT EXPENSE
;     95/JUL/14 	M.C.	 - DUE TO VIRTUAL MEMORY HAS EXCEEDED
;				   SPLIT THE LAST REQUEST INTO A NEW
;				   PROGRAM(U115B.QTS).  IF CHANGES ARE
;				   REQUIRED IN THE LAST REQUEST, ALSO
;				   MAKE THE SAME CHANGE IN U115B.QTS
;     95/SEP/15		M.C.	 - INCLUDE 'E'XPENSE RECORDS AS PART OF
;				   FINAL-ALL-EXPENSES
;     95/OCT/23 	M.C.	 - INCLUDE TOT-REVHBK IN DOC-YTDINC
;				   SINCE TOT-REVHBK IS A NEGATIVE VALUE
;				   SUBTRACT TOT-REVHBK TO GET THE POSITIVE
;				   VALUE
;     95/NOV/07		M.C.	 - PDR 634 - INCLUDE NEW CONDITION TO
;				   TOT-REVHBK DEFINITION
;     95/NOV/22		M.C.	 - OPTIMIZE PROGRAM BY DELETING ALL THE
;				   UNUSED TEMP & DEFINE ITEMS
;     96/APR/19		M.C.	 - INCLUDE 'REVCLA' IN TOT-REVHBK
;   1999/Feb/18         S.B.     - Checked for Y2K.
;   1999/Jun/07		S.B.	 - Altered the call to gst.use to be 
;				   called from $use instead of src.
; 00/nov/23.B.E.        - HOLDBK calculation has some rounding problems whereby
;                         hold backs in the amount of a few cents occur. The
;                         original logic ignored values less than 10 cents.
;                         Changed to ignore anything less than $1.00
; 01/feb/21 B.E. - for PAYCOD 6 ONLY - add TOTEXP into doctor's f020 field
;		   doc-yrly-expense-computed to keep ytd expenses totaled
; 01/feb/22 B.E. - added rounding of ICU GST calculation
; 03/jan/21 B.E. - added file debugu115b_at_doc_nbr for debugging purposes
; 04/mar/01 b.e.        - added 'O'ther 'I'ncome processing in addition to
;                         current logic that handles 'R'egular and 'M'isc
;                         types of Income.
; 04/mac/25 b .e.       - changed sequence of factor divide by 100000 to try
;                         to avoid rounding errors (approx 5cents on 10,500)
; 06/mar/20 b.e.        - generate of HOLDBK transaction eliminated in 
;                         u115_common.qts used by this program
; 2006/may/10 b.e.      - $1M payroll changes to size of calculated fields
; 2008/oct/01 brad1     - added new tot-dept-expense-other calulation to handle TITHE /DEPMEM (as per u115a)
; 2008/oct/22 M.C.     - add set lock record update
; 2008/oct/23 M.C.     - change to use $src/u115b_debug.qts at the end for debug purpose
;			- change final-all-expenses from temp to define item

cancel clear
set stacksize 10000
run u115

set default
set process 50000
set lock record update

global temp ytdcea-seq     zoned*2 unsigned
global temp ytdcea-type    char*1

global temp ytdcex-seq     zoned*2 unsigned
global temp ytdcex-type    char*1

global temp ytdear-seq     zoned*2 unsigned
global temp ytdear-type    char*1

global temp rmaexr-seq     zoned*2 unsigned
global temp rmaexr-type    char*1

global temp rmaexm-seq     zoned*2 unsigned
global temp rmaexm-type    char*1

global temp incexp-seq     zoned*2 unsigned
global temp incexp-type    char*1

global temp ytdinc-seq     zoned*2 unsigned
global temp ytdinc-type    char*1

global temp totinc-seq     zoned*2 unsigned
global temp totinc-type    char*1

global temp totexp-seq     zoned*2 unsigned
global temp totexp-type    char*1

global temp ytdgua-seq     zoned*2 unsigned
global temp ytdgua-type    char*1

global temp ytdgub-seq     zoned*2 unsigned
global temp ytdgub-type    char*1

global temp ytdguc-seq     zoned*2 unsigned
global temp ytdguc-type    char*1

global temp depexr-seq     zoned*2 unsigned
global temp depexr-type    char*1

global temp depexm-seq     zoned*2 unsigned
global temp depexm-type    char*1

global temp gst-seq     zoned*2 unsigned
global temp gst-type    char*1

global temp holdback-seq     zoned*2 unsigned
global temp holdback-type    char*1

;--------------------------------------------------------------------
;
; DETERMINE THE 'PROCESS-SEQ' AND 'TRANSACTION TYPE'
; FOR THE TRANSACTIONS BEING CREATED IN THIS RUN

request u115_a_get_ytdcea                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDCEA"
item ytdcea-seq  = process-seq
item ytdcea-type = comp-type

request u115_a_get_ytdcex                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDCEX"
item ytdcex-seq  = process-seq
item ytdcex-type = comp-type

request u115_a_get_ytdear                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDEAR"
item ytdear-seq     = process-seq
item ytdear-type    = comp-type

request u115_a_get_rmaexr                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "RMAEXR"
item rmaexr-seq     = process-seq
item rmaexr-type    = comp-type

request u115_a_get_rmaexm                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "RMAEXM"
item rmaexm-seq     = process-seq
item rmaexm-type    = comp-type

request u115_a_get_ytdinc                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDINC"
item ytdinc-seq  = process-seq
item ytdinc-type = comp-type

request u115_a_get_incexp                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "INCEXP"
item incexp-seq      = process-seq
item incexp-type     = comp-type

request u115_a_get_totinc                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "TOTINC"
item totinc-seq      = process-seq
item totinc-type     = comp-type

request u115_a_get_totexp                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "TOTEXP"
item totexp-seq      = process-seq
item totexp-type     = comp-type

request u115_a_get_ytdgua                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDGUA"
item ytdgua-seq  = process-seq
item ytdgua-type = comp-type

request u115_a_get_ytdgub                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDGUB"
item ytdgub-seq  = process-seq
item ytdgub-type = comp-type

request u115_a_get_ytdguc                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "YTDGUC"
item ytdguc-seq  = process-seq
item ytdguc-type = comp-type

request u115_a_get_depexr                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "DEPEXR"
item depexr-seq     = process-seq
item depexr-type    = comp-type

request u115_a_get_depexm                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "DEPEXM"
item depexm-seq     = process-seq
item depexm-type    = comp-type

request u115_a_get_gst                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "GST"
item gst-seq     = process-seq
item gst-type    = comp-type

request u115_a_get_holdback                    &
                on edit        errors report &
                on calculation errors report
access f190-comp-codes
choose comp-code "HOLDBK"
item holdback-seq     = process-seq
item holdback-type    = comp-type

;-------------------------------------------------------------------------------

request u115_run_1                              &
                on edit        errors report    &
                on calculation errors report

access constants-mstr-rec-6                                     &
	link current-ep-nbr viaindex compensation-key2          &
	  to ep-nbr  of f110-compensation                     	&
	link doc-nbr of f110-compensation                       &
	  to doc-nbr of f020-doctor-mstr                      	&
	link ("FLAT+3_TITHE_LEVELS"), 				&
	     doc-dept, 						&
	     doc-afp-paym-group, 				&
	     '000', 						&
	     comp-code  					&
          to dept-expense-calc-code, 				&
	     dept-nbr, 						&
	     doc-afp-paym-group, 				&
	     doc-nbr, 						&
	     comp-code 						&
          of f116-dept-expense-rules-dtl alias f116-group  opt  &
	link comp-code of f110-compensation                     &
	  to comp-code of f190-comp-codes

choose const-rec-nbr 6
sorted on doc-nbr   of f110-compensation                        &
       on ep-nbr    of f110-compensation                        &
       on comp-code of f110-compensation  ; CHANGED TO SORTED WHEN CHOOSE ADDED !!!!


;use $pb_src/gst.use
use $use/gst.use
use $src/u115_common.qts 

;temp amt-ytdgua   integer*8 signed size 4
temp amt-ytdgua   integer*10 signed 
item amt-ytdgua   = amt-ytdgua   + amt-net of f110-compensation       &
                        if    comp-code of f110-compensation="GTYPEA" &
               else amt-ytdgua                                        &
                        reset at doc-nbr

;temp amt-ytdgub   integer*8 signed size 4
temp amt-ytdgub   integer*10 signed
item amt-ytdgub   = amt-ytdgub   + amt-net of f110-compensation       &
                        if    comp-code of f110-compensation="GTYPEB" &
               else amt-ytdgub                                        &
                        reset at doc-nbr

;temp amt-ytdguc   integer*8 signed size 4
temp amt-ytdguc   integer*10 signed 
item amt-ytdguc   = amt-ytdguc   + amt-net of f110-compensation       &
                        if    comp-code of f110-compensation="GTYPEC" &
               else amt-ytdguc                                        &
                        reset at doc-nbr

; if new record, initial YTD record in F119.  (required only for
; "I"ncome, AND "E"xpense records - .ie calc rec types like CEICEA are
;  needed AND the "D"eduction records are handled in the tax/eft processing)

define x-rec-type  char*1 = "A"

;def x-not-needed integer*8 signed size 4 = 0
def x-not-needed integer*10 signed        = 0

; (GROSS VALUES ARE USUALLY PUT INTO F119 HOWEVER FOR CEIEXP THE NET VALUE IS REQUIRED)

;def x-amt-net int*8 signed size 4                                           &
def x-amt-net int*10 signed                                            &
        = amt-gross of f110-compensation                               &
                 if comp-code of f110-compensation = "CEIEXP"          &
     else amt-net   of f110-compensation
;def x-amt-gross int*8 signed size 4                                         &
def x-amt-gross int*10 signed                                          &
        = amt-net   of f110-compensation                               &
                 if comp-code of f110-compensation = "CEIEXP"          &
     else amt-gross of f110-compensation


;def tot-gst-only integer*8 signed size 4				&
def tot-gst-only integer*10 signed        		&
    =  tot-gst-only-reg					&
     + tot-gst-only-misc

;def tot-holdback-only integer*8 signed size 4				&
def tot-holdback-only integer*10 signed        		&
    =  tot-holdback-only-reg				&
     + tot-holdback-only-misc

;def tot-income-gross integer*8 signed size 4				&
def tot-income-gross integer*10 signed       		&
    =  tot-income-gross-reg				&
     + tot-income-gross-misc				&
     + tot-income-gross-other

;def tot-income-net integer*8 signed size 4				&
def tot-income-net integer*10 signed        		&
    =  tot-income-net-reg				&
     + tot-income-net-misc				&
     + tot-income-net-other

;temp final-all-expenses integer*8 size 4
; 2008/10/23 - MC - chnage to define instead
;temp final-all-expenses integer*10
;item final-all-expenses                                    &
def  final-all-expenses integer*10 			  &
; 2008/10/23 - end
     =  tot-dept-expense-reg                               &
      + tot-dept-expense-misc                              &
      + tot-rma-expense-only-reg                           &
      + tot-rma-expense-only-misc                          &
      + tot-gst-only                                       &
      + tot-holdback-only                                  &
      + tot-revhbk					   &
      + doc-ceicex        ; 93/SEP/24
;brad1
; don't include the new dept-expense-other in final-all-expenses otherwise
; it will mess up totalling that generates 'holdBK' calculation


; 2008/10/23 - MC - comment out and change to use define instead
;;temp final-all-expenses-plus-dept-expense-other integer*10
;;item final-all-expenses-plus-dept-expense-other                 &
;     =  final-all-expenses                                     &
;      + tot-dept-expense-other
; brad3 fix temp statement
;;     =  final-all-expenses-plus-dept-expense-other              &
;;      + final-all-expenses                                      &
;;      + tot-dept-expense-other          reset at doc-nbr

def  final-all-expenses-plus-dept-expense-other integer*10	&
     =  final-all-expenses                                      &
      + tot-dept-expense-other       
; 2008/10/23 - end


;temp amt-income-minus-expenses-g integer*8 signed size 4
temp amt-income-minus-expenses-g integer*10 signed 
item amt-income-minus-expenses-g                        &
       =  tot-income-gross                              &
;brad1   - final-all-expenses
         - final-all-expenses-plus-dept-expense-other

;temp doc-ytdear-plus-amt-manpay integer*8 signed size 4
temp doc-ytdear-plus-amt-manpay integer*10 signed
item doc-ytdear-plus-amt-manpay				&
 =   doc-ytdear of f020-doctor-mstr			&
   + amt-manpay

;-------------- F 1 1 0 --------------------------------------------------------

subfile f110_ytdinc keep at doc-nbr include  &
doc-nbr of f020-doctor-mstr,          & 
         doc-ytdinc-g of f020-doctor-mstr      ,&
        tot-income-gross, &
        doc-ytdinc   of f020-doctor-mstr      ,&
        tot-income-net , &
	 tot-revhbk

subfile f110_totinc keep at doc-nbr include &
doc-nbr of f020-doctor-mstr,          & 
        tot-income-gross-reg   ,&
                               tot-income-gross-misc	,&
                               tot-income-gross-other, &
        tot-income-net-reg    , &
                               tot-income-net-misc	,&
                               tot-income-net-other,&
        doc-ytdcea of f020-doctor-mstr, &
doc-ytdear-plus-amt-manpay

subfile f110_totexp keep at doc-nbr include  &
doc-nbr of f020-doctor-mstr,          & 
final-all-expenses,&
     final-all-expenses-plus-dept-expense-other,&
      tot-dept-expense-other       
 
build $pb_obj/u115b
  
